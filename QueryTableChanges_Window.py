# Form implementation generated from reading ui file 'QueryTableChanges_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from config import config
import psycopg2


class AlignDelegate(QtWidgets.QStyledItemDelegate):
    def initStyleOption(self, option, index):
        super(AlignDelegate, self).initStyleOption(option, index)
        option.displayAlignment = QtCore.Qt.AlignmentFlag.AlignCenter


class Ui_QueryTableChanges_Window(object):
    def setupUi(self, QueryTableChanges_Window):
        QueryTableChanges_Window.setObjectName("QueryTableChanges_Window")
        QueryTableChanges_Window.resize(1000, 590)
        QueryTableChanges_Window.setMinimumSize(QtCore.QSize(845, 590))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("//nas01/DATOS/Comunes/EIPSA-ERP/icon.ico"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        QueryTableChanges_Window.setWindowIcon(icon)
        QueryTableChanges_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255)\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=QueryTableChanges_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setVerticalSpacing(10)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem, 2, 0, 1, 1)
        self.tableQueryTableChanges = QtWidgets.QTableWidget(parent=self.frame)
        self.tableQueryTableChanges.setObjectName("tableQueryTableChanges")
        self.tableQueryTableChanges.setColumnCount(9)
        self.tableQueryTableChanges.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryTableChanges.setHorizontalHeaderItem(8, item)
        self.gridLayout_2.addWidget(self.tableQueryTableChanges, 3, 0, 1, 1)
        self.hLayout1 = QtWidgets.QHBoxLayout()
        self.hLayout1.setObjectName("hLayout1")
        self.label_TableChanges = QtWidgets.QLabel(parent=self.frame)
        self.label_TableChanges.setMinimumSize(QtCore.QSize(80, 25))
        self.label_TableChanges.setMaximumSize(QtCore.QSize(80, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_TableChanges.setFont(font)
        self.label_TableChanges.setObjectName("label_TableChanges")
        self.hLayout1.addWidget(self.label_TableChanges)
        self.Table_QueryTableChanges = QtWidgets.QComboBox(parent=self.frame)
        self.Table_QueryTableChanges.setMinimumSize(QtCore.QSize(300, 25))
        self.Table_QueryTableChanges.setMaximumSize(QtCore.QSize(300, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Table_QueryTableChanges.setFont(font)
        self.Table_QueryTableChanges.setObjectName("Table_QueryTableChanges")
        self.hLayout1.addWidget(self.Table_QueryTableChanges)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.hLayout1.addItem(spacerItem1)
        self.Button_Query = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Query.setMinimumSize(QtCore.QSize(150, 35))
        self.Button_Query.setMaximumSize(QtCore.QSize(150, 35))
        self.Button_Query.setAutoDefault(True)
        self.Button_Query.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.Button_Query.setObjectName("Button_Query")
        self.hLayout1.addWidget(self.Button_Query)
        self.gridLayout_2.addLayout(self.hLayout1, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        QueryTableChanges_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=QueryTableChanges_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 845, 22))
        self.menubar.setObjectName("menubar")
        QueryTableChanges_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=QueryTableChanges_Window)
        self.statusbar.setObjectName("statusbar")
        QueryTableChanges_Window.setStatusBar(self.statusbar)

        self.retranslateUi(QueryTableChanges_Window)
        self.Button_Query.clicked.connect(self.querytablechanges)
        QtCore.QMetaObject.connectSlotsByName(QueryTableChanges_Window)


        # Query for get al tables of changes
        query_tablechanges = "SELECT table_name FROM information_schema.tables WHERE table_schema = 'logging' AND table_type = 'BASE TABLE';"

        conn = None
        try:
        # read the connection parameters
            params = config()
        # connect to the PostgreSQL server
            conn = psycopg2.connect(**params)
            cur = conn.cursor()
        # execution of commands one by one
            cur.execute(query_tablechanges)
            results=cur.fetchall()
        # close communication with the PostgreSQL database server
            cur.close()
        # commit the changes
            conn.commit()

        except (Exception, psycopg2.DatabaseError) as error:
            print(error)
        finally:
            if conn is not None:
                conn.close()

        tables_names=[x[0] for x in results]
        tables_names.sort()
        self.Table_QueryTableChanges.addItems(tables_names)
        #self.tableQueryTableChanges.resizeColumnsToContents()
        #self.tableQueryTableChanges.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)

    def retranslateUi(self, QueryTableChanges_Window):
        _translate = QtCore.QCoreApplication.translate
        QueryTableChanges_Window.setWindowTitle(_translate("QueryTableChanges_Window", "Consultar Oferta"))
        self.label_TableChanges.setText(_translate("QueryTableChanges_Window", "Tabla:"))
        self.Button_Query.setText(_translate("QueryTableChanges_Window", "Buscar"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(0)
        item.setText(_translate("QueryOffer_Window", "ID"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(1)
        item.setText(_translate("QueryOffer_Window", "Fecha"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(2)
        item.setText(_translate("QueryOffer_Window", "Schema"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(3)
        item.setText(_translate("QueryOffer_Window", "Tabla"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(4)
        item.setText(_translate("QueryOffer_Window", "Operación"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(5)
        item.setText(_translate("QueryOffer_Window", "Usuario"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(6)
        item.setText(_translate("QueryOffer_Window", "Valor Nuevo"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(7)
        item.setText(_translate("QueryOffer_Window", "Valor Viejo"))
        item = self.tableQueryTableChanges.horizontalHeaderItem(8)
        item.setText(_translate("QueryOffer_Window", "Clave"))


    def querytablechanges(self):
        table_selected = self.Table_QueryTableChanges.currentText()
        commands_queryoffer = f"SELECT * FROM logging.{table_selected}"

        conn = None
        try:
        # read the connection parameters
            params = config()
        # connect to the PostgreSQL server
            conn = psycopg2.connect(**params)
            cur = conn.cursor()
        # execution of commands
            cur.execute(commands_queryoffer)
            results=cur.fetchall()
            self.tableQueryTableChanges.setRowCount(len(results))
            tablerow=0

        # fill the Qt Table with the query results
            for row in results:
                for column in range(9):
                    it=QtWidgets.QTableWidgetItem(str(row[column]))
                    it.setFlags(it.flags() & ~QtCore.Qt.ItemFlag.ItemIsEditable)
                    self.tableQueryTableChanges.setItem(tablerow, column, it)

                tablerow+=1

            self.tableQueryTableChanges.verticalHeader().hide()
            self.tableQueryTableChanges.setItemDelegate(AlignDelegate(self.tableQueryTableChanges))
            self.tableQueryTableChanges.resizeColumnsToContents()

        # close communication with the PostgreSQL database server
            cur.close()
        # commit the changes
            conn.commit()
        except (Exception, psycopg2.DatabaseError) as error:
            print(error)
        finally:
            if conn is not None:
                conn.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    QueryTableChanges_Window = QtWidgets.QMainWindow()
    ui = Ui_QueryTableChanges_Window()
    ui.setupUi(QueryTableChanges_Window)
    QueryTableChanges_Window.show()
    sys.exit(app.exec())
