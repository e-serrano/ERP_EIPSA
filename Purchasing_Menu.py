# Form implementation generated from reading ui file 'Purchasing_Menu.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from SupplierOrder_Window import Ui_SupplierOrder_Window
from ClientOrder_Window import Ui_ClientOrder_Window
from Quotation_Window import Ui_Quotation_Window
from Supplies_Window import Ui_Supplies_Window
from Purchasing_DB_Menu import Ui_Purchasing_DB_Menu
from Purchasing_Reports_Menu import Ui_Purchasing_Reports_Menu
import os
import configparser
from utils.Database_Manager import Create_DBconnection
from config import config

basedir = r"\\ERP-EIPSA-DATOS\DATOS\Comunes\EIPSA-ERP"


class Ui_Purchasing_Menu(object):
    """
    UI class for the Purchasing Menu window.
    """
    def __init__(self, name, username):
        """
        Initializes the `Ui_Purchasing_Menu` window with the provided user information and sets up the UI.

        Args:
            name (str): The name of the user or report.
            username (str): The username of the logged-in user.
        """
        self.name=name
        self.username = username

    def setupUi(self, Purchasing_Menu):
        """
        Sets up the user interface for the Purchasing_Menu.

        Args:
            Purchasing_Menu (QtWidgets.QMainWindow): The main window for the UI setup.
        """
        Purchasing_Menu.setObjectName("Purchasing_Menu")
        Purchasing_Menu.setWindowModality(QtCore.Qt.WindowModality.WindowModal)
        Purchasing_Menu.resize(615, 400)
        Purchasing_Menu.setMinimumSize(QtCore.QSize(int(615//1.5), int(400//1.5)))
        Purchasing_Menu.setMaximumSize(QtCore.QSize(int(615//1.5), int(400//1.5)))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        Purchasing_Menu.setWindowIcon(icon)
        if self.username == 'd.marquez':
            Purchasing_Menu.setStyleSheet("QWidget {\n"
    "background-color: #121212; color: rgb(255, 255, 255)\n"
    "}\n"
    "\n"
    ".QFrame {\n"
    "    border: 2px solid white;\n"
    "}\n"
    "\n"
    "QPushButton {\n"
    "background-color: #33bdef;\n"
    "  border: 1px solid transparent;\n"
    "  border-radius: 3px;\n"
    "  color: #fff;\n"
    "  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
    "  font-size: 14px;\n"
    "  font-weight: 800;\n"
    "  line-height: 1.15385;\n"
    "  margin: 0;\n"
    "  outline: none;\n"
    "  padding: 2px .4em;\n"
    "  text-align: center;\n"
    "  text-decoration: none;\n"
    "  vertical-align: baseline;\n"
    "  white-space: nowrap;\n"
    "}\n"
    "\n"
    "QPushButton:hover {\n"
    "    background-color: #019ad2;\n"
    "    border-color: rgb(0, 0, 0);\n"
    "}\n"
    "\n"
    "QPushButton:pressed {\n"
    "    background-color: rgb(1, 140, 190);\n"
    "    border-color: rgb(255, 255, 255);\n"
    "}"
    )
        else:
            Purchasing_Menu.setStyleSheet("QWidget {\n"
    "background-color: rgb(255, 255, 255);\n"
    "}\n"
    "\n"
    ".QFrame {\n"
    "    border: 2px solid black;\n"
    "}\n"
    "\n"
    "QPushButton {\n"
    "background-color: #33bdef;\n"
    "  border: 1px solid transparent;\n"
    "  border-radius: 3px;\n"
    "  color: #fff;\n"
    "  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
    "  font-size: 14px;\n"
    "  font-weight: 800;\n"
    "  line-height: 1.15385;\n"
    "  margin: 0;\n"
    "  outline: none;\n"
    "  padding: 2px .4em;\n"
    "  text-align: center;\n"
    "  text-decoration: none;\n"
    "  vertical-align: baseline;\n"
    "  white-space: nowrap;\n"
    "}\n"
    "\n"
    "QPushButton:hover {\n"
    "    background-color: #019ad2;\n"
    "    border-color: rgb(0, 0, 0);\n"
    "}\n"
    "\n"
    "QPushButton:pressed {\n"
    "    background-color: rgb(1, 140, 190);\n"
    "    border-color: rgb(255, 255, 255);\n"
    "}"
    )
        self.centralwidget = QtWidgets.QWidget(parent=Purchasing_Menu)
        self.centralwidget.setMinimumSize(QtCore.QSize(int(615//1.5), int(360//1.5)))
        self.centralwidget.setMaximumSize(QtCore.QSize(int(615//1.5), int(360//1.5)))
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(int(275//1.5), int(325//1.5)))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.hLayout1 = QtWidgets.QHBoxLayout()
        self.hLayout1.setObjectName("hLayout1")
        self.Button_Supplies = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Supplies.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Supplies.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Supplies.setObjectName("Button_Supplies")
        self.hLayout1.addWidget(self.Button_Supplies)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.hLayout1.addItem(spacerItem2)
        self.Button_ClientOrder = QtWidgets.QPushButton(parent=self.frame)
        self.Button_ClientOrder.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_ClientOrder.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_ClientOrder.setObjectName("Button_ClientOrder")
        self.hLayout1.addWidget(self.Button_ClientOrder)
        self.gridLayout_2.addLayout(self.hLayout1, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem, 2, 0, 1, 1)
        self.hLayout2 = QtWidgets.QHBoxLayout()
        self.hLayout2.setObjectName("hLayout2")
        self.Button_SupplierOrder = QtWidgets.QPushButton(parent=self.frame)
        self.Button_SupplierOrder.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_SupplierOrder.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_SupplierOrder.setObjectName("Button_SupplierOrder")
        self.hLayout2.addWidget(self.Button_SupplierOrder)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.hLayout2.addItem(spacerItem1)
        self.Button_Quotation = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Quotation.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Quotation.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Quotation.setObjectName("Button_Quotation")
        self.hLayout2.addWidget(self.Button_Quotation)
        self.gridLayout_2.addLayout(self.hLayout2, 3, 0, 1, 1)
        self.hLayout3 = QtWidgets.QHBoxLayout()
        self.hLayout3.setContentsMargins(-1, 0, -1, -1)
        self.hLayout3.setObjectName("hLayout3")
        self.Button_Databases = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Databases.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Databases.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Databases.setObjectName("Button_Databases")
        self.hLayout3.addWidget(self.Button_Databases)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.hLayout3.addItem(spacerItem4)
        self.Button_Reports = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Reports.setMinimumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Reports.setMaximumSize(QtCore.QSize(int(250//1.5), int(35//1.5)))
        self.Button_Reports.setObjectName("Button_Reports")
        self.hLayout3.addWidget(self.Button_Reports)
        self.gridLayout_2.addLayout(self.hLayout3, 10, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem5, 6, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        Purchasing_Menu.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=Purchasing_Menu)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 615, 22))
        self.menubar.setObjectName("menubar")
        Purchasing_Menu.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=Purchasing_Menu)
        self.statusbar.setObjectName("statusbar")
        Purchasing_Menu.setStatusBar(self.statusbar)

        self.retranslateUi(Purchasing_Menu)
        self.Button_Supplies.clicked.connect(self.supplies)
        self.Button_ClientOrder.clicked.connect(self.clientorder)
        self.Button_SupplierOrder.clicked.connect(self.supplierorder)
        self.Button_Quotation.clicked.connect(self.quotation)
        self.Button_Databases.clicked.connect(lambda: self.databases(Purchasing_Menu))
        self.Button_Reports.clicked.connect(lambda: self.reports(Purchasing_Menu))
        QtCore.QMetaObject.connectSlotsByName(Purchasing_Menu)


# Function to translate and updates the text of various UI elements
    def retranslateUi(self, Purchasing_Menu):
        """
        Translates and updates the text of various UI elements.
        """
        _translate = QtCore.QCoreApplication.translate
        Purchasing_Menu.setWindowTitle(_translate("Purchasing_Menu", "ERP EIPSA - Compras"))
        self.Button_SupplierOrder.setText(_translate("Purchasing_Menu", "Pedido A Proveedor"))
        self.Button_Quotation.setText(_translate("Purchasing_Menu", "Cotización Suministros"))
        self.Button_Databases.setText(_translate("Purchasing_Menu", "Bases"))
        self.Button_Reports.setText(_translate("Purchasing_Menu", "Informes"))
        self.Button_Supplies.setText(_translate("Purchasing_Menu", "Suministros"))
        self.Button_ClientOrder.setText(_translate("Purchasing_Menu", "Pedido De Clientes"))


    def supplies(self):
        """
        Opens the 'supplies' window. Sets up UI for the user.
        """

        dbparam = config()
        user_database = dbparam["user"]
        password_database = dbparam["password"]

        db_tag_com = Create_DBconnection(user_database, password_database)
        if not db_tag_com:
            sys.exit()

        self.edit_tags_app = Ui_Supplies_Window(self.username,db_tag_com)
        self.edit_tags_app.showMaximized()


    def clientorder(self):
        """
        Opens the 'clientorder' window. Sets up UI for the user.
        """
        self.ui_clientorder=Ui_ClientOrder_Window(self.username)
        self.ui_clientorder.showMaximized()


    def supplierorder(self):
        """
        Opens the 'supplierorder' window. Sets up UI for the user.
        """
        self.ui_supplierorder=Ui_SupplierOrder_Window(self.username)
        self.ui_supplierorder.showMaximized()


    def quotation(self):
        """
        Opens the 'quotation' window. Sets up UI for the user.
        """
        self.ui_quotation=Ui_Quotation_Window(self.username)
        self.ui_quotation.showMaximized()


    def databases(self,Purchasing_Menu):
        """
        Opens the 'databases' window and hides the current menu. Sets up UI for the user and connects the cancel button to re-show the previous menu.

        Args:
            Purchasing_Menu (QtWidgets.QWidget): The current menu to hide when the new window is shown.
        """
        self.purchase_DB_window=QtWidgets.QMainWindow()
        self.ui=Ui_Purchasing_DB_Menu(self.name, self.username)
        self.ui.setupUi(self.purchase_DB_window)
        self.purchase_DB_window.show()
        Purchasing_Menu.hide()
        self.ui.Button_Cancel.clicked.connect(Purchasing_Menu.show)


    def reports(self,Purchasing_Menu):
        """
        Opens the 'reports' window and hides the current menu. Sets up UI for the user and connects the cancel button to re-show the previous menu.

        Args:
            Purchasing_Menu (QtWidgets.QWidget): The current menu to hide when the new window is shown.
        """
        self.purchasing_reports_window=QtWidgets.QMainWindow()
        self.ui=Ui_Purchasing_Reports_Menu(self.name, self.username)
        self.ui.setupUi(self.purchasing_reports_window)
        self.purchasing_reports_window.show()
        Purchasing_Menu.hide()
        self.ui.Button_Cancel.clicked.connect(Purchasing_Menu.show)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Purchasing_Menu = QtWidgets.QMainWindow()
    ui = Ui_Purchasing_Menu('daniel','d.marquez')
    ui.setupUi(Purchasing_Menu)
    Purchasing_Menu.show()
    sys.exit(app.exec())
