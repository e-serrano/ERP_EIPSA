# Form implementation generated from reading ui file 'EditOffer_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt6 import QtCore, QtGui, QtWidgets
import psycopg2
from config import config, get_path
from utils.Show_Message import show_message
from utils.Database_Manager import Database_Connection

basedir = r"\\nas01\DATOS\Comunes\EIPSA-ERP"


class Ui_Edit_OfferRec_Window(object):
    """
    UI class for the Edit Offer Received window.
    """
    def __init__(self, id_offer = None):
        """
        Initializes the Ui_OfferRecToOf_Window with the specified offer id.

        Args:
            id_offer (str): offer id associated with the window.
        """
        self.id_offer = id_offer

    def setupUi(self, Edit_OfferReceived):
        """
        Sets up the user interface for the Edit_OfferReceived.

        Args:
            Edit_OfferReceived (QtWidgets.QMainWindow): The main window for the UI setup.
        """
        Edit_OfferReceived.setObjectName("Edit_OfferReceived")
        Edit_OfferReceived.resize(670, 425)
        Edit_OfferReceived.setMinimumSize(QtCore.QSize(700, 550))
        Edit_OfferReceived.setMaximumSize(QtCore.QSize(700, 550))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(str(get_path("Resources", "Iconos", "icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        Edit_OfferReceived.setWindowIcon(icon)
        Edit_OfferReceived.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:focus{\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=Edit_OfferReceived)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridlayout_main = QtWidgets.QGridLayout(self.frame)
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridlayout_main.addItem(spacerItem, 0, 0, 1, 1)
        self.label_IDOffer = QtWidgets.QLabel(parent=self.frame)
        self.label_IDOffer.setMinimumSize(QtCore.QSize(60, 25))
        # self.label_IDOffer.setMaximumSize(QtCore.QSize(60, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_IDOffer.setFont(font)
        self.label_IDOffer.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_IDOffer.setObjectName("label_IDOffer")
        self.gridlayout_main.addWidget(self.label_IDOffer, 1, 0, 1, 2)
        self.IDOffer_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.IDOffer_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.IDOffer_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.IDOffer_Edit_Offer.setFont(font)
        self.IDOffer_Edit_Offer.setEnabled(False)
        self.IDOffer_Edit_Offer.setObjectName("IDOffer_Edit_Offer")
        self.gridlayout_main.addWidget(self.IDOffer_Edit_Offer, 1, 2, 1, 1)
        self.label_Responsible = QtWidgets.QLabel(parent=self.frame)
        self.label_Responsible.setMinimumSize(QtCore.QSize(60, 25))
        # self.label_Responsible.setMaximumSize(QtCore.QSize(60, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Responsible.setFont(font)
        self.label_Responsible.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_Responsible.setObjectName("label_Responsible")
        self.gridlayout_main.addWidget(self.label_Responsible, 2, 0, 1, 2)
        self.Responsible_Edit_Offer = QtWidgets.QComboBox(parent=self.frame)
        self.Responsible_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.Responsible_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Responsible_Edit_Offer.setFont(font)
        self.Responsible_Edit_Offer.setObjectName("Responsible_Edit_Offer")
        self.gridlayout_main.addWidget(self.Responsible_Edit_Offer, 2, 2, 1, 1)
        self.label_State = QtWidgets.QLabel(parent=self.frame)
        self.label_State.setMinimumSize(QtCore.QSize(110, 25))
        self.label_State.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_State.setFont(font)
        self.label_State.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_State.setObjectName("label_State")
        self.gridlayout_main.addWidget(self.label_State, 2, 3, 1, 1)
        self.State_Edit_Offer = QtWidgets.QComboBox(parent=self.frame)
        self.State_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.State_Edit_Offer.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.State_Edit_Offer.setFont(font)
        self.State_Edit_Offer.setObjectName("State_Edit_Offer")
        self.gridlayout_main.addWidget(self.State_Edit_Offer, 2, 4, 1, 1)
        self.label_Client = QtWidgets.QLabel(parent=self.frame)
        self.label_Client.setMinimumSize(QtCore.QSize(60, 25))
        self.label_Client.setMaximumSize(QtCore.QSize(60, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Client.setFont(font)
        self.label_Client.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_Client.setObjectName("label_Client")
        self.gridlayout_main.addWidget(self.label_Client, 3, 0, 1, 1)
        self.Button_NewClient = QtWidgets.QPushButton(parent=self.frame)
        self.Button_NewClient.setMinimumSize(QtCore.QSize(50, 25))
        self.Button_NewClient.setMaximumSize(QtCore.QSize(50, 25))
        self.Button_NewClient.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_NewClient.setObjectName("Button_NewClient")
        self.Button_NewClient.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.Button_NewClient.setStyleSheet("QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 20px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 1px .1em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: center;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255)\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.gridlayout_main.addWidget(self.Button_NewClient, 3, 1, 1, 1)
        self.Client_Edit_Offer = QtWidgets.QComboBox(parent=self.frame)
        self.Client_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.Client_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Client_Edit_Offer.setFont(font)
        self.Client_Edit_Offer.setObjectName("Client_Edit_Offer")
        self.gridlayout_main.addWidget(self.Client_Edit_Offer, 3, 2, 1, 1)
        self.label_RecepDate = QtWidgets.QLabel(parent=self.frame)
        self.label_RecepDate.setMinimumSize(QtCore.QSize(110, 25))
        self.label_RecepDate.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_RecepDate.setFont(font)
        self.label_RecepDate.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_RecepDate.setObjectName("label_RecepDate")
        self.gridlayout_main.addWidget(self.label_RecepDate, 3, 3, 1, 1)
        self.RecepDate_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.RecepDate_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.RecepDate_Edit_Offer.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.RecepDate_Edit_Offer.setFont(font)
        self.RecepDate_Edit_Offer.setObjectName("RecepDate_Edit_Offer")
        self.gridlayout_main.addWidget(self.RecepDate_Edit_Offer, 3, 4, 1, 1)
        self.label_FinalClient = QtWidgets.QLabel(parent=self.frame)
        self.label_FinalClient.setMinimumSize(QtCore.QSize(110, 25))
        self.label_FinalClient.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_FinalClient.setFont(font)
        self.label_FinalClient.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_FinalClient.setObjectName("label_FinalClient")
        self.gridlayout_main.addWidget(self.label_FinalClient, 4, 0, 1, 2)
        self.FinalClient_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.FinalClient_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.FinalClient_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.FinalClient_Edit_Offer.setFont(font)
        self.FinalClient_Edit_Offer.setObjectName("FinalClient_Edit_Offer")
        self.gridlayout_main.addWidget(self.FinalClient_Edit_Offer, 4, 2, 1, 1)
        self.label_LimitDate = QtWidgets.QLabel(parent=self.frame)
        self.label_LimitDate.setMinimumSize(QtCore.QSize(110, 25))
        self.label_LimitDate.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_LimitDate.setFont(font)
        self.label_LimitDate.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_LimitDate.setObjectName("label_LimitDate")
        self.gridlayout_main.addWidget(self.label_LimitDate, 4, 3, 1, 1)
        self.LimitDate_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.LimitDate_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.LimitDate_Edit_Offer.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.LimitDate_Edit_Offer.setFont(font)
        self.LimitDate_Edit_Offer.setObjectName("LimitDate_Edit_Offer")
        self.gridlayout_main.addWidget(self.LimitDate_Edit_Offer, 4, 4, 1, 1)
        self.label_NumRef = QtWidgets.QLabel(parent=self.frame)
        self.label_NumRef.setMinimumSize(QtCore.QSize(110, 25))
        # self.label_NumRef.setMaximumSize(QtCore.QSize(105, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_NumRef.setFont(font)
        self.label_NumRef.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_NumRef.setObjectName("label_NumRef")
        self.gridlayout_main.addWidget(self.label_NumRef, 5, 0, 1, 2)
        self.NumRef_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.NumRef_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.NumRef_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.NumRef_Edit_Offer.setFont(font)
        self.NumRef_Edit_Offer.setObjectName("NumRef_Edit_Offer")
        self.gridlayout_main.addWidget(self.NumRef_Edit_Offer, 5, 2, 1, 1)
        self.label_Description = QtWidgets.QLabel(parent=self.frame)
        self.label_Description.setMinimumSize(QtCore.QSize(110, 25))
        self.label_Description.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Description.setFont(font)
        self.label_Description.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label_Description.setObjectName("label_Description")
        self.gridlayout_main.addWidget(self.label_Description, 5, 3, 1, 1)
        self.Description_Edit_Offer = QtWidgets.QTextEdit(parent=self.frame)
        self.Description_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.Description_Edit_Offer.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Description_Edit_Offer.setFont(font)
        self.Description_Edit_Offer.setObjectName("Description_Edit_Offer")
        self.gridlayout_main.addWidget(self.Description_Edit_Offer, 5, 4, 1, 1)
        self.label_Material = QtWidgets.QLabel(parent=self.frame)
        self.label_Material.setMinimumSize(QtCore.QSize(110, 25))
        # self.label_Material.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Material.setFont(font)
        self.label_Material.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_Material.setObjectName("label_Material")
        self.gridlayout_main.addWidget(self.label_Material, 6, 0, 1, 2)
        self.Material_Edit_Offer = QtWidgets.QComboBox(parent=self.frame)
        self.Material_Edit_Offer.setMinimumSize(QtCore.QSize(175, 25))
        self.Material_Edit_Offer.setMaximumSize(QtCore.QSize(175, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Material_Edit_Offer.setFont(font)
        self.Material_Edit_Offer.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.Material_Edit_Offer.setObjectName("Material_Edit_Offer")
        self.gridlayout_main.addWidget(self.Material_Edit_Offer, 6, 2, 1, 1)
        self.label_NumItems = QtWidgets.QLabel(parent=self.frame)
        self.label_NumItems.setMinimumSize(QtCore.QSize(110, 25))
        self.label_NumItems.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_NumItems.setFont(font)
        self.label_NumItems.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignTop)
        self.label_NumItems.setObjectName("label_NumItems")
        self.gridlayout_main.addWidget(self.label_NumItems, 6, 3, 1, 1)
        self.NumItems_Edit_Offer = QtWidgets.QLineEdit(parent=self.frame)
        self.NumItems_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.NumItems_Edit_Offer.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.NumItems_Edit_Offer.setFont(font)
        self.NumItems_Edit_Offer.setObjectName("NumItems_Edit_Offer")
        self.gridlayout_main.addWidget(self.NumItems_Edit_Offer, 6, 4, 1, 1)
        self.label_Notes = QtWidgets.QLabel(parent=self.frame)
        self.label_Notes.setMinimumSize(QtCore.QSize(110, 25))
        # self.label_Notes.setMaximumSize(QtCore.QSize(110, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Notes.setFont(font)
        self.label_Notes.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label_Notes.setObjectName("label_Notes")
        self.gridlayout_main.addWidget(self.label_Notes, 7, 0, 1, 2)
        self.Notes_Edit_Offer = QtWidgets.QTextEdit(parent=self.frame)
        self.Notes_Edit_Offer.setMinimumSize(QtCore.QSize(200, 25))
        self.Notes_Edit_Offer.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Notes_Edit_Offer.setFont(font)
        self.Notes_Edit_Offer.setObjectName("Notes_Edit_Offer")
        self.gridlayout_main.addWidget(self.Notes_Edit_Offer, 7, 2, 1, 3)
        self.Button_Edit_Offer = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Edit_Offer.setMinimumSize(QtCore.QSize(200, 30))
        self.Button_Edit_Offer.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Button_Edit_Offer.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Edit_Offer.setAutoDefault(True)
        self.Button_Edit_Offer.setObjectName("Button_Edit_Offer")
        self.gridlayout_main.addWidget(self.Button_Edit_Offer, 8, 1, 1, 2)
        self.Button_Cancel = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Cancel.setMinimumSize(QtCore.QSize(200, 30))
        self.Button_Cancel.setMaximumSize(QtCore.QSize(200, 30))
        self.Button_Cancel.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Cancel.setAutoDefault(True)
        self.Button_Cancel.setObjectName("Button_Cancel")
        self.gridlayout_main.addWidget(self.Button_Cancel, 8, 4, 1, 1)        
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        Edit_OfferReceived.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=Edit_OfferReceived)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 670, 22))
        self.menubar.setObjectName("menubar")
        Edit_OfferReceived.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=Edit_OfferReceived)
        self.statusbar.setObjectName("statusbar")
        Edit_OfferReceived.setStatusBar(self.statusbar)
        Edit_OfferReceived.setWindowFlags(QtCore.Qt.WindowType.WindowMinimizeButtonHint)

        self.retranslateUi(Edit_OfferReceived)
        self.Button_Cancel.clicked.connect(Edit_OfferReceived.close) # type: ignore
        self.Button_Edit_Offer.clicked.connect(self.editoffer)
        self.Button_NewClient.clicked.connect(self.NewClient)
        QtCore.QMetaObject.connectSlotsByName(Edit_OfferReceived)

        self.IDOffer_Edit_Offer.setText(self.id_offer)

        query_producttype = ("""
                        SELECT * 
                        FROM product_type
                        ORDER BY product_type ASC
                        """)

        query_commercial = ("""
                        select username
                        from users_data.registration
                        where profile = 'Comercial'
                        order by username ASC""")
        conn = None
        try:
            with Database_Connection(config()) as conn:
                with conn.cursor() as cur:
                # execution of commands one by one
                    cur.execute(query_producttype)
                    results_producttype=cur.fetchall()

                    cur.execute(query_commercial)
                    results_commercial=cur.fetchall()

        except (Exception, psycopg2.DatabaseError) as error:
            show_message("Ha ocurrido el siguiente error:\n"
                        + str(error), 'critical')

        list_material=[x[0] for x in results_producttype]
        self.Material_Edit_Offer.addItems(list_material)

        list_commercial=[x[0] for x in results_commercial]
        self.Responsible_Edit_Offer.addItems(list_commercial)

        self.State_Edit_Offer.addItems(['Recibida', 'Declinada'])

        self.load_clients()
        self.queryofferdata()


# Function to translate and updates the text of various UI elements
    def retranslateUi(self, Edit_OfferReceived):
        """
        Translates and updates the text of various UI elements.
        """
        _translate = QtCore.QCoreApplication.translate
        Edit_OfferReceived.setWindowTitle(_translate("Edit_OfferReceived", "Editar Oferta"))
        self.label_Description.setText(_translate("Edit_OfferReceived", "Descripción:"))
        self.label_Responsible.setText(_translate("Edit_OfferReceived", "Responsable:"))
        self.label_Client.setText(_translate("Edit_OfferReceived", "Cliente:"))
        self.label_FinalClient.setText(_translate("Edit_OfferReceived", "Cl. Final / Planta:"))
        self.label_NumRef.setText(_translate("Edit_OfferReceived", "Nº Referencia:"))
        self.label_RecepDate.setText(_translate("Edit_OfferReceived", "Fecha Recep.:"))
        self.label_LimitDate.setText(_translate("Edit_OfferReceived", "Fecha Límite:"))
        self.label_Material.setText(_translate("Edit_OfferReceived", "Instrumento:"))
        self.label_NumItems.setText(_translate("Edit_OfferReceived", "Nº Equipos:"))
        self.Button_Edit_Offer.setText(_translate("Edit_OfferReceived", "Editar Oferta"))
        self.Button_Cancel.setText(_translate("Edit_OfferReceived", "Cancelar"))
        self.Button_NewClient.setText(_translate("Edit_OfferReceived", "+"))
        self.label_IDOffer.setText(_translate("Edit_OfferReceived", "ID Oferta:"))
        self.label_State.setText(_translate("Edit_OfferReceived", "Estado"))
        self.label_Notes.setText(_translate("Edit_OfferReceived", "Notas"))


    def load_clients(self):
        """
        Loads the list of clients from the database into the client selection widget.

        Raises:
            psycopg2.DatabaseError: If a database error occurs during the SQL execution.
        """
        self.Client_Edit_Offer.clear()
        commands_clients = ("""
                        SELECT * 
                        FROM clients_list
                        ORDER BY client_name ASC
                        """)

        try:
            with Database_Connection(config()) as conn:
                with conn.cursor() as cur:
                # execution of commands one by one
                    cur.execute(commands_clients)
                    results_clients=cur.fetchall()

        except (Exception, psycopg2.DatabaseError) as error:
            show_message("Ha ocurrido el siguiente error:\n"
                        + str(error), "critical")

        list_clients=[x[0] for x in results_clients]
        self.Client_Edit_Offer.addItems(list_clients)


    def editoffer(self):
        """
        Edit the corresponding entry in database after validating form inputs.
        """
        id_offer=self.IDOffer_Edit_Offer.text()
        responsible=self.Responsible_Edit_Offer.currentText()
        client=self.Client_Edit_Offer.currentText()
        finalclient=self.FinalClient_Edit_Offer.text()
        numref=self.NumRef_Edit_Offer.text()
        state=self.State_Edit_Offer.currentText()
        material=self.Material_Edit_Offer.currentText()
        description=self.Description_Edit_Offer.toPlainText()
        limit_date=self.LimitDate_Edit_Offer.text() if self.LimitDate_Edit_Offer.text() != '' else (None if self.LimitDate_Edit_Offer.text() == 'None' else None)
        recep_date=self.RecepDate_Edit_Offer.text() if self.RecepDate_Edit_Offer.text() != '' else (None if self.RecepDate_Edit_Offer.text() == 'None' else None)
        numitems = self.NumItems_Edit_Offer.text() if self.NumItems_Edit_Offer.text() != 'None' else None
        notes = self.Notes_Edit_Offer.toPlainText()

        if not (numitems.isdigit() or (numitems.startswith('-') and numitems[1:].isdigit())) or float(numitems) < 0:
            show_message("Introduce un número de equipos válido. En caso de no saber el alcance definitivo, pon 0", "warning")

        else:
            if id_offer=="" or (client=="" or (finalclient=="" or (numref=="" or (state=="" or (material=="" or (limit_date=="" or numitems=='')))))):
                show_message("Los campos no pueden estar vacíos", "warning")

            else:
                #SQL Query for updating values in database
                commands_updateoffer = ("""
                            UPDATE received_offers
                            SET "responsible" = %s, "client" = %s, "final_client" = %s, "num_ref_offer" = %s, "state" = %s,
                            "material" = %s, "description" = %s, "limit_date" = %s, "recep_date" = %s, "items_number" = %s, "notes" = %s
                            WHERE "id_offer" = %s
                            """)

                try:
                    with Database_Connection(config()) as conn:
                        with conn.cursor() as cur:
                        # execution of commands one by one
                            data=(responsible, client, finalclient, numref, state,
                                material, description, limit_date, recep_date, numitems, notes,
                                id_offer,)
                            cur.execute(commands_updateoffer,data)

                    # commit the changes
                        conn.commit()

                    show_message("Oferta editada con exito", "info")

                    self.FinalClient_Edit_Offer.setText('')
                    self.NumRef_Edit_Offer.setText('')
                    self.RecepDate_Edit_Offer.setText('')
                    self.LimitDate_Edit_Offer.setText('')
                    self.Description_Edit_Offer.setText('')
                    self.NumItems_Edit_Offer.setText('')
                    self.Notes_Edit_Offer.setText('')

                except (Exception, psycopg2.DatabaseError) as error:
                    show_message("Ha ocurrido el siguiente error:\n"
                                + str(error), "critical")

    def queryofferdata(self):
        """
        Queries the database for offer data based on the offer number provided by the user. It displays the retrieved information 
        in the corresponding form fields.
        """
    #SQL Query for loading existing data in database
        commands_loaddataoffer = ("""
                    SELECT received_offers."client", received_offers."final_client", received_offers."num_ref_offer", received_offers."state", received_offers."material",
                    received_offers."description", TO_CHAR(received_offers."limit_date", 'DD/MM/YYYY'), TO_CHAR(received_offers."recep_date", 'DD/MM/YYYY'),
                    received_offers."items_number", initials."initials", received_offers."notes"
                    FROM received_offers
                    JOIN users_data.initials as initials ON (received_offers."responsible" = initials."username")
                    WHERE "id_offer" = %s
                    """)

        try:
            with Database_Connection(config()) as conn:
                with conn.cursor() as cur:
                # execution of commands one by one
                    cur.execute(commands_loaddataoffer,(self.id_offer,))
                    results=cur.fetchall()

        except (Exception, psycopg2.DatabaseError) as error:
            show_message("Ha ocurrido el siguiente error:\n"
                        + str(error), "critical")

        self.Client_Edit_Offer.setCurrentText(str(results[0][0]))
        self.FinalClient_Edit_Offer.setText(str(results[0][1]))
        self.NumRef_Edit_Offer.setText(str(results[0][2]))
        self.State_Edit_Offer.setCurrentText(str(results[0][3]))
        self.Material_Edit_Offer.setCurrentText(str(results[0][4]))
        self.Description_Edit_Offer.setText(str(results[0][5]) if str(results[0][5]) != 'None' else '')
        self.LimitDate_Edit_Offer.setText(str(results[0][6]))
        self.RecepDate_Edit_Offer.setText(str(results[0][7]) if str(results[0][7]) != 'None' else '')
        self.NumItems_Edit_Offer.setText(str(results[0][8]))
        self.Notes_Edit_Offer.setText(str(results[0][10]))

    def NewClient(self):
        """
        Opens the 'NewClient' window. Sets up the UI for the user.
        """
        from OfferClientAdd_Window import Ui_OfferClientAdd_Window
        self.new_client_window=QtWidgets.QMainWindow()
        self.ui=Ui_OfferClientAdd_Window()
        self.ui.setupUi(self.new_client_window)
        self.new_client_window.show()
        self.ui.exit_OfferClientAdd.clicked.connect(self.load_clients)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Edit_OfferRec_Window = QtWidgets.QMainWindow()
    ui = Ui_Edit_OfferRec_Window('R-11')
    ui.setupUi(Edit_OfferRec_Window)
    Edit_OfferRec_Window.show()
    sys.exit(app.exec())