# Form implementation generated from reading ui file 'QueryOffer_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import psycopg2
from config import config


class AlignDelegate(QtWidgets.QStyledItemDelegate):
    def initStyleOption(self, option, index):
        super(AlignDelegate, self).initStyleOption(option, index)
        option.displayAlignment = QtCore.Qt.AlignmentFlag.AlignCenter


class Ui_QueryOffer_Window(object):
    def setupUi(self, QueryOffer_Window):
        QueryOffer_Window.setObjectName("QueryOffer_Window")
        QueryOffer_Window.resize(845, 590)
        QueryOffer_Window.setMinimumSize(QtCore.QSize(845, 590))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("//nas01/DATOS/Comunes/EIPSA-ERP/icon.ico"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        QueryOffer_Window.setWindowIcon(icon)
        QueryOffer_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255)\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=QueryOffer_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setVerticalSpacing(10)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem2 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 0, 0, 1, 1)
        self.hLayout1 = QtWidgets.QHBoxLayout()
        self.hLayout1.setObjectName("hLayout1")
        self.label_NumOffer = QtWidgets.QLabel(parent=self.frame)
        self.label_NumOffer.setMinimumSize(QtCore.QSize(80, 25))
        self.label_NumOffer.setMaximumSize(QtCore.QSize(80, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_NumOffer.setFont(font)
        self.label_NumOffer.setObjectName("label_NumOffer")
        self.hLayout1.addWidget(self.label_NumOffer)
        self.Numoffer_QueryOffer = QtWidgets.QLineEdit(parent=self.frame)
        self.Numoffer_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.Numoffer_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Numoffer_QueryOffer.setFont(font)
        self.Numoffer_QueryOffer.setObjectName("Numoffer_QueryOffer")
        self.hLayout1.addWidget(self.Numoffer_QueryOffer)
        self.label_Client = QtWidgets.QLabel(parent=self.frame)
        self.label_Client.setMinimumSize(QtCore.QSize(90, 25))
        self.label_Client.setMaximumSize(QtCore.QSize(90, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Client.setFont(font)
        self.label_Client.setObjectName("label_Client")
        self.hLayout1.addWidget(self.label_Client)
        self.Client_QueryOffer = QtWidgets.QLineEdit(parent=self.frame)
        self.Client_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.Client_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Client_QueryOffer.setFont(font)
        self.Client_QueryOffer.setObjectName("Client_QueryOffer")
        self.hLayout1.addWidget(self.Client_QueryOffer)
        self.gridLayout_2.addLayout(self.hLayout1, 1, 0, 1, 1)
        self.hLayout2 = QtWidgets.QHBoxLayout()
        self.hLayout2.setObjectName("hLayout2")
        self.label_Year = QtWidgets.QLabel(parent=self.frame)
        self.label_Year.setMinimumSize(QtCore.QSize(80, 25))
        self.label_Year.setMaximumSize(QtCore.QSize(80, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Year.setFont(font)
        self.label_Year.setObjectName("label_Year")
        self.hLayout2.addWidget(self.label_Year)
        self.Year_QueryOffer = QtWidgets.QLineEdit(parent=self.frame)
        self.Year_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.Year_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Year_QueryOffer.setFont(font)
        self.Year_QueryOffer.setObjectName("Year_QueryOffer")
        self.hLayout2.addWidget(self.Year_QueryOffer)
        self.label_FinalClient = QtWidgets.QLabel(parent=self.frame)
        self.label_FinalClient.setMinimumSize(QtCore.QSize(90, 25))
        self.label_FinalClient.setMaximumSize(QtCore.QSize(90, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_FinalClient.setFont(font)
        self.label_FinalClient.setObjectName("label_FinalClient")
        self.hLayout2.addWidget(self.label_FinalClient)
        self.FinalClient_QueryOffer = QtWidgets.QLineEdit(parent=self.frame)
        self.FinalClient_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.FinalClient_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.FinalClient_QueryOffer.setFont(font)
        self.FinalClient_QueryOffer.setObjectName("FinalClient_QueryOffer")
        self.hLayout2.addWidget(self.FinalClient_QueryOffer)
        self.gridLayout_2.addLayout(self.hLayout2, 2, 0, 1, 1)
        self.hLayout3 = QtWidgets.QHBoxLayout()
        self.hLayout3.setObjectName("hLayout3")
        self.label_RefNum = QtWidgets.QLabel(parent=self.frame)
        self.label_RefNum.setMinimumSize(QtCore.QSize(80, 25))
        self.label_RefNum.setMaximumSize(QtCore.QSize(80, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_RefNum.setFont(font)
        self.label_RefNum.setObjectName("label_RefNum")
        self.hLayout3.addWidget(self.label_RefNum)
        self.Ref_QueryOffer = QtWidgets.QLineEdit(parent=self.frame)
        self.Ref_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.Ref_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Ref_QueryOffer.setFont(font)
        self.Ref_QueryOffer.setObjectName("Ref_QueryOffer")
        self.hLayout3.addWidget(self.Ref_QueryOffer)
        self.label_Material = QtWidgets.QLabel(parent=self.frame)
        self.label_Material.setMinimumSize(QtCore.QSize(90, 25))
        self.label_Material.setMaximumSize(QtCore.QSize(90, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_Material.setFont(font)
        self.label_Material.setObjectName("label_Material")
        self.hLayout3.addWidget(self.label_Material)
        self.Material_QueryOffer = QtWidgets.QComboBox(parent=self.frame)
        self.Material_QueryOffer.setMinimumSize(QtCore.QSize(250, 25))
        self.Material_QueryOffer.setMaximumSize(QtCore.QSize(250, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Material_QueryOffer.setFont(font)
        self.Material_QueryOffer.setObjectName("Material_QueryOffer")
        self.hLayout3.addWidget(self.Material_QueryOffer)
        self.gridLayout_2.addLayout(self.hLayout3, 3, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem, 4, 0, 1, 1)
        self.hLayout4 = QtWidgets.QHBoxLayout()
        self.hLayout4.setObjectName("hLayout4")
        self.Button_Clean = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Clean.setMinimumSize(QtCore.QSize(150, 35))
        self.Button_Clean.setMaximumSize(QtCore.QSize(150, 35))
        self.Button_Clean.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.Button_Clean.setObjectName("Button_Clean")
        self.hLayout4.addWidget(self.Button_Clean)
        self.Button_Query = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Query.setMinimumSize(QtCore.QSize(150, 35))
        self.Button_Query.setMaximumSize(QtCore.QSize(150, 35))
        self.Button_Query.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.Button_Query.setObjectName("Button_Query")
        self.hLayout4.addWidget(self.Button_Query)
        self.gridLayout_2.addLayout(self.hLayout4, 5, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem1, 6, 0, 1, 1)
        self.tableQueryOffer = QtWidgets.QTableWidget(parent=self.frame)
        self.tableQueryOffer.setObjectName("tableQueryOffer")
        self.tableQueryOffer.setColumnCount(8)
        self.tableQueryOffer.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        item.setFont(font)
        self.tableQueryOffer.setHorizontalHeaderItem(8, item)
        self.tableQueryOffer.setSortingEnabled(True)
        self.gridLayout_2.addWidget(self.tableQueryOffer, 7, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        QueryOffer_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=QueryOffer_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 845, 22))
        self.menubar.setObjectName("menubar")
        QueryOffer_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=QueryOffer_Window)
        self.statusbar.setObjectName("statusbar")
        QueryOffer_Window.setStatusBar(self.statusbar)
        self.tableQueryOffer.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)

        self.retranslateUi(QueryOffer_Window)
        QtCore.QMetaObject.connectSlotsByName(QueryOffer_Window)
        self.Button_Clean.clicked.connect(self.clean_boxes) # type: ignore
        self.Button_Query.clicked.connect(self.query_offer) # type: ignore
        self.Numoffer_QueryOffer.returnPressed.connect(self.query_offer)

        list_material=['','Caudal','Temperatura','Nivel','Otros']
        self.Material_QueryOffer.addItems(list_material)


    def retranslateUi(self, QueryOffer_Window):
        _translate = QtCore.QCoreApplication.translate
        QueryOffer_Window.setWindowTitle(_translate("QueryOffer_Window", "Consultar Oferta"))
        item = self.tableQueryOffer.horizontalHeaderItem(0)
        item.setText(_translate("QueryOffer_Window", "Nº Oferta"))
        item = self.tableQueryOffer.horizontalHeaderItem(1)
        item.setText(_translate("QueryOffer_Window", "Responsable"))
        item = self.tableQueryOffer.horizontalHeaderItem(2)
        item.setText(_translate("QueryOffer_Window", "Estado"))
        item = self.tableQueryOffer.horizontalHeaderItem(3)
        item.setText(_translate("QueryOffer_Window", "Referencia"))
        item = self.tableQueryOffer.horizontalHeaderItem(4)
        item.setText(_translate("QueryOffer_Window", "Cliente"))
        item = self.tableQueryOffer.horizontalHeaderItem(5)
        item.setText(_translate("QueryOffer_Window", "Cliente Final"))
        item = self.tableQueryOffer.horizontalHeaderItem(6)
        item.setText(_translate("QueryOffer_Window", "Material"))
        item = self.tableQueryOffer.horizontalHeaderItem(7)
        item.setText(_translate("QueryOffer_Window", "Importe"))
        self.Button_Clean.setText(_translate("QueryOffer_Window", "Limpiar Filtros"))
        self.Button_Query.setText(_translate("QueryOffer_Window", "Buscar"))
        self.label_NumOffer.setText(_translate("QueryOffer_Window", "Nº Oferta:"))
        self.label_Client.setText(_translate("QueryOffer_Window", "Cliente:"))
        self.label_Year.setText(_translate("QueryOffer_Window", "Año:"))
        self.label_FinalClient.setText(_translate("QueryOffer_Window", "Cliente Final:"))
        self.label_RefNum.setText(_translate("QueryOffer_Window", "Referencia:"))
        self.label_Material.setText(_translate("QueryOffer_Window", "Material:"))


    def clean_boxes(self):
        self.Numoffer_QueryOffer.setText("")
        self.Client_QueryOffer.setText("")
        self.Year_QueryOffer.setText("")
        self.FinalClient_QueryOffer.setText("")
        self.Ref_QueryOffer.setText("")
        self.Material_QueryOffer.setCurrentText("")


    def query_offer(self):
        numoffer=self.Numoffer_QueryOffer.text()
        client=self.Client_QueryOffer.text()
        year=self.Year_QueryOffer.text()
        finalclient=self.FinalClient_QueryOffer.text()
        reference=self.Ref_QueryOffer.text()
        material=self.Material_QueryOffer.currentText()

        if ((numoffer=="" or numoffer==" ") and (client=="" or client==" ") and (year=="" or year==" ")
        and (finalclient=="" or finalclient==" ") and (reference=="" or reference==" ") and (material=="" or material==" ")):
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap("//nas01/DATOS/Comunes/EIPSA-ERP/icon.ico"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Consultar Pedido")
            dlg.setText("Introduce un filtro en alguno de los campos")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()

        else:
            commands = ("""
                        SELECT offers."num_offer",offers."responsible",offers."state",offers."num_ref_offer",offers."client",offers."final_client",product_type."variable",offers."offer_amount"
                        FROM offers
                        INNER JOIN product_type ON (offers."material"=product_type."material")
                        WHERE (UPPER(offers."num_offer") LIKE UPPER('%%'||%s||'%%')
                        AND
                        UPPER(offers."num_ref_offer") LIKE UPPER('%%'||%s||'%%')
                        AND
                        UPPER(offers."client") LIKE UPPER('%%'||%s||'%%')
                        AND
                        UPPER(offers."final_client") LIKE UPPER('%%'||%s||'%%')
                        AND
                        product_type."variable" LIKE '%%'||%s||'%%'
                        AND
                        offers."offer_year"::text LIKE '%%'||%s||'%%'
                        )
                        ORDER BY offers."num_offer"
                        """)
            conn = None
            try:
            # read the connection parameters
                params = config()
            # connect to the PostgreSQL server
                conn = psycopg2.connect(**params)
                cur = conn.cursor()
            # execution of commands
                data=(numoffer,reference,client,finalclient,material,year,)
                cur.execute(commands,data)
                results=cur.fetchall()
                self.tableQueryOffer.setRowCount(len(results))
                tablerow=0

            # fill the Qt Table with the query results
                for row in results:
                    for column in range(8):
                        it=QtWidgets.QTableWidgetItem(str(row[column]))
                        it.setFlags(it.flags() & ~QtCore.Qt.ItemFlag.ItemIsEditable)
                        self.tableQueryOffer.setItem(tablerow, column, it)

                    tablerow+=1

                self.tableQueryOffer.verticalHeader().hide()
                self.tableQueryOffer.setItemDelegate(AlignDelegate(self.tableQueryOffer))

            # close communication with the PostgreSQL database server
                cur.close()
            # commit the changes
                conn.commit()
            except (Exception, psycopg2.DatabaseError) as error:
                print(error)
            finally:
                if conn is not None:
                    conn.close()


    def keyPressEvent(self, event):
        if event.matches(QtGui.QKeySequence.Copy):
            self.copiar_datos()
        elif event.matches(QtGui.QKeySequence.Paste):
            self.pegar_datos()

    def copiar_datos(self):
        seleccion = self.tableOffer.selectedRanges()
        if seleccion:
            fila_inicial = seleccion[0].topRow()
            columna_inicial = seleccion[0].leftColumn()
            fila_final = seleccion[0].bottomRow()
            columna_final = seleccion[0].rightColumn()

            texto = ''
            for fila in range(fila_inicial, fila_final + 1):
                for columna in range(columna_inicial, columna_final + 1):
                    item = self.tableOffer.item(fila, columna)
                    texto += item.text() if item is not None else ''
                    if columna < columna_final:
                        texto += '\t'
                texto += '\n'

            clipboard = QtWidgets.QApplication.clipboard()
            mime_data = QtGui.QClipboard.MimeData()
            mime_data.setText(texto)
            clipboard.setMimeData(mime_data)

    def pegar_datos(self):
        texto = QtWidgets.QApplication.clipboard().text()
        filas = texto.split('\n')
        for fila_index, fila_texto in enumerate(filas):
            if not fila_texto.strip():
                continue

            columnas = fila_texto.split('\t')
            for columna_index, columna_texto in enumerate(columnas):
                item = QtWidgets.QTableWidgetItem(columna_texto)
                self.tableOffer.setItem(fila_index, columna_index, item)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    QueryOffer_Window = QtWidgets.QMainWindow()
    ui = Ui_QueryOffer_Window()
    ui.setupUi(QueryOffer_Window)
    QueryOffer_Window.show()
    sys.exit(app.exec())
