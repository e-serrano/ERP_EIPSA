# Form implementation generated from reading ui file 'InvoiceSend_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt6 import QtCore, QtGui, QtWidgets
from datetime import *
import psycopg2
from config import config
import os
import re

basedir = r"\\nas01\DATOS\Comunes\EIPSA-ERP"


class Ui_InvoiceSend_Window(object):
    """
    UI class for the Send Invoice window.
    """
    def setupUi(self, InvoiceSend_Window):
        """
        Sets up the user interface for the InvoiceSend_Window.

        Args:
            InvoiceSend_Window (QtWidgets.QMainWindow): The main window for the UI setup.
        """
        InvoiceSend_Window.setObjectName("InvoiceSend_Window")
        InvoiceSend_Window.resize(450, 325)
        InvoiceSend_Window.setMinimumSize(QtCore.QSize(450, 325))
        InvoiceSend_Window.setMaximumSize(QtCore.QSize(450, 325))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        InvoiceSend_Window.setWindowIcon(icon)
        InvoiceSend_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:focus{\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=InvoiceSend_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(20, 20, 400, 275))
        self.frame.setMinimumSize(QtCore.QSize(400, 275))
        self.frame.setMaximumSize(QtCore.QSize(400, 275))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem, 0, 0, 1, 1)
        self.gridlayout = QtWidgets.QGridLayout()
        self.gridlayout.setObjectName = ("gridlayout")
        self.gridlayout.setVerticalSpacing(30)
        self.label_num_invoice = QtWidgets.QLabel(parent=self.frame)
        self.label_num_invoice.setMinimumSize(QtCore.QSize(100, 25))
        self.label_num_invoice.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_num_invoice.setFont(font)
        self.label_num_invoice.setObjectName("label_num_invoice")
        self.gridlayout.addWidget(self.label_num_invoice, 0, 0, 1, 1)
        self.num_invoice = QtWidgets.QLineEdit(parent=self.frame)
        self.num_invoice.setMinimumSize(QtCore.QSize(150, 25))
        self.num_invoice.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.num_invoice.setFont(font)
        self.num_invoice.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.num_invoice.setObjectName("num_invoice")
        self.gridlayout.addWidget(self.num_invoice, 0, 1, 1, 1)
        self.label_verif_date = QtWidgets.QLabel(parent=self.frame)
        self.label_verif_date.setMinimumSize(QtCore.QSize(100, 25))
        self.label_verif_date.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_verif_date.setFont(font)
        self.label_verif_date.setObjectName("label_verif_date")
        self.gridlayout.addWidget(self.label_verif_date, 1, 0, 1, 1)
        self.verif_date = QtWidgets.QLineEdit(parent=self.frame)
        self.verif_date.setMinimumSize(QtCore.QSize(150, 25))
        self.verif_date.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.verif_date.setFont(font)
        self.verif_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verif_date.setObjectName("verif_date")
        self.gridlayout.addWidget(self.verif_date, 1, 1, 1, 1)
        self.label_method = QtWidgets.QLabel(parent=self.frame)
        self.label_method.setMinimumSize(QtCore.QSize(100, 25))
        self.label_method.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_method.setFont(font)
        self.label_method.setObjectName("label_method")
        self.gridlayout.addWidget(self.label_method, 2, 0, 1, 1)
        self.method = QtWidgets.QLineEdit(parent=self.frame)
        self.method.setMinimumSize(QtCore.QSize(150, 25))
        self.method.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.method.setFont(font)
        self.method.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.method.setObjectName("method")
        self.gridlayout.addWidget(self.method, 2, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridlayout, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 2, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Button_Insert = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Insert.setEnabled(True)
        self.Button_Insert.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Insert.setMinimumSize(QtCore.QSize(100, 35))
        self.Button_Insert.setMaximumSize(QtCore.QSize(100, 35))
        self.Button_Insert.setAutoDefault(True)
        self.Button_Insert.setObjectName("Button_Insert")
        self.horizontalLayout.addWidget(self.Button_Insert)
        spacerItem1 = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.Button_Cancel = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Cancel.setEnabled(True)
        self.Button_Cancel.setMinimumSize(QtCore.QSize(100, 35))
        self.Button_Cancel.setMaximumSize(QtCore.QSize(100, 35))
        self.Button_Cancel.setAutoDefault(True)
        self.Button_Cancel.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Cancel.setObjectName("Button_Cancel")
        self.horizontalLayout.addWidget(self.Button_Cancel)
        self.gridLayout_2.addLayout(self.horizontalLayout, 3, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem4, 4, 0, 1, 1)
        InvoiceSend_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=InvoiceSend_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 450, 22))
        self.menubar.setObjectName("menubar")
        InvoiceSend_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=InvoiceSend_Window)
        self.statusbar.setObjectName("statusbar")
        InvoiceSend_Window.setStatusBar(self.statusbar)
        InvoiceSend_Window.setWindowFlags(QtCore.Qt.WindowType.WindowMinimizeButtonHint)

        actual_date = date.today().strftime("%d/%m/%Y")
        self.verif_date.setText(actual_date)

        self.retranslateUi(InvoiceSend_Window)
        self.Button_Cancel.clicked.connect(InvoiceSend_Window.close) # type: ignore
        self.Button_Insert.clicked.connect(self.insert_data)
        QtCore.QMetaObject.connectSlotsByName(InvoiceSend_Window)


# Function to translate and updates the text of various UI elements
    def retranslateUi(self, InvoiceSend_Window):
        """
        Translates and updates the text of various UI elements.
        """
        _translate = QtCore.QCoreApplication.translate
        InvoiceSend_Window.setWindowTitle(_translate("InvoiceSend_Window", "Envío Factura"))
        self.Button_Insert.setText(_translate("InvoiceSend_Window", "Insertar"))
        self.Button_Cancel.setText(_translate("InvoiceSend_Window", "Cancelar"))
        self.label_method.setText(_translate("InvoiceSend_Window", "Forma Envío:"))
        self.label_verif_date.setText(_translate("InvoiceSend_Window", "Fecha Envío:"))
        self.label_num_invoice.setText(_translate("InvoiceSend_Window", "Nº Factura:"))

    def insert_data(self):
        """
        Inserts or updates invoice data in the database after verifying the input.
        """
        num_invoice = self.num_invoice.text()
        verif_date = self.verif_date.text()
        method = self.method.text()

        if num_invoice == "" or (verif_date == "" or method == ""):
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Envío Factura")
            dlg.setText("Rellene todos los campos")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()

        elif not re.match(r'^\d{2}[/\-]\d{2}[/\-]\d{4}$', verif_date):
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Envío Factura")
            dlg.setText("La fecha debe tener formato dd/mm/yyyy o dd-mm-yyyy")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()
            del dlg, new_icon

        else:
            commands_checkorder = ("""
                        SELECT *
                        FROM purch_fact.invoice_header
                        WHERE "num_invoice" LIKE %s
                        """)
            conn = None
            try:
            # read the connection parameters
                params = config()
            # connect to the PostgreSQL server
                conn = psycopg2.connect(**params)
                cur = conn.cursor()
            # execution of commands one by one
                cur.execute(commands_checkorder,(num_invoice,))
                results = cur.fetchall()
                match = list(filter(lambda x:num_invoice in x, results))
            # close communication with the PostgreSQL database server
                cur.close()
            # commit the changes
                conn.commit()

            except (Exception, psycopg2.DatabaseError) as error:
                dlg = QtWidgets.QMessageBox()
                new_icon = QtGui.QIcon()
                new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                dlg.setWindowIcon(new_icon)
                dlg.setWindowTitle("ERP EIPSA")
                dlg.setText("Ha ocurrido el siguiente error:\n"
                            + str(error))
                dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                dlg.exec()
                del dlg, new_icon

            finally:
                if conn is not None:
                    conn.close()

            if len(match) == 0:
                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Envío Factura")
                    dlg.setText("El número de factura introducido no existe")
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
                    dlg.exec()
    
            else:
                commands_insert_data = ("""
                            UPDATE purch_fact."invoice_header"
                            SET "date_send_invoice" = %s, "method_send_invoice" = %s
                            WHERE "num_invoice" = %s
                            """)
                conn = None
                try:
                # read the connection parameters
                    params = config()
                # connect to the PostgreSQL server
                    conn = psycopg2.connect(**params)
                    cur = conn.cursor()
                # execution of commands
                    cur.execute(commands_insert_data, (verif_date, method, num_invoice, ))
                # close communication with the PostgreSQL database server
                    cur.close()
                # commit the changes
                    conn.commit()

                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Envío Factura")
                    dlg.setText("Datos insertados con éxito")
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Information)
                    dlg.exec()

                    self.num_invoice.setText('')
                    self.method.setText('')

                except (Exception, psycopg2.DatabaseError) as error:
                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Envío Factura")
                    dlg.setText("Ha ocurrido el siguiente error:\n"
                                + str(error))
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                    dlg.exec()
                    del dlg, new_icon

                finally:
                    if conn is not None:
                        conn.close()


# if __name__ == "__main__":
#     app = QtWidgets.QApplication(sys.argv)
#     InvoiceSend_Window = QtWidgets.QMainWindow()
#     ui = Ui_InvoiceSend_Window()
#     ui.setupUi(InvoiceSend_Window)
#     InvoiceSend_Window.show()
#     sys.exit(app.exec())