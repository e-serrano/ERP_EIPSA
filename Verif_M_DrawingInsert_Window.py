# Form implementation generated from reading ui file 'Verif_M_DrawingInsert_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt6 import QtCore, QtGui, QtWidgets
from datetime import *
import psycopg2
from config import config
import os
import re


basedir = r"\\nas01\DATOS\Comunes\EIPSA-ERP"


class Ui_Verif_M_DrawingInsert_Window(object):
    def __init__(self, numorder):
        self.numorder = numorder

    def setupUi(self, Verif_M_DrawingInsert_Window):
        Verif_M_DrawingInsert_Window.setObjectName("Verif_M_DrawingInsert_Window")
        Verif_M_DrawingInsert_Window.resize(450, 325)
        Verif_M_DrawingInsert_Window.setMinimumSize(QtCore.QSize(450, 325))
        Verif_M_DrawingInsert_Window.setMaximumSize(QtCore.QSize(450, 325))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        Verif_M_DrawingInsert_Window.setWindowIcon(icon)
        Verif_M_DrawingInsert_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:focus{\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=Verif_M_DrawingInsert_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(20, 20, 400, 275))
        self.frame.setMinimumSize(QtCore.QSize(400, 275))
        self.frame.setMaximumSize(QtCore.QSize(400, 275))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem, 0, 0, 1, 1)
        self.gridlayout = QtWidgets.QGridLayout()
        self.gridlayout.setObjectName = ("gridlayout")
        self.gridlayout.setVerticalSpacing(30)
        self.label_num_order = QtWidgets.QLabel(parent=self.frame)
        self.label_num_order.setMinimumSize(QtCore.QSize(100, 25))
        self.label_num_order.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_num_order.setFont(font)
        self.label_num_order.setObjectName("label_num_order")
        self.gridlayout.addWidget(self.label_num_order, 1, 0, 1, 1)
        self.num_order = QtWidgets.QLineEdit(parent=self.frame)
        self.num_order.setMinimumSize(QtCore.QSize(150, 25))
        self.num_order.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.num_order.setFont(font)
        self.num_order.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.num_order.setObjectName("num_order")
        self.gridlayout.addWidget(self.num_order, 1, 1, 1, 1)
        self.label_verif_date = QtWidgets.QLabel(parent=self.frame)
        self.label_verif_date.setMinimumSize(QtCore.QSize(100, 25))
        self.label_verif_date.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_verif_date.setFont(font)
        self.label_verif_date.setObjectName("label_verif_date")
        self.gridlayout.addWidget(self.label_verif_date, 2, 0, 1, 1)
        self.verif_date = QtWidgets.QLineEdit(parent=self.frame)
        self.verif_date.setMinimumSize(QtCore.QSize(150, 25))
        self.verif_date.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.verif_date.setFont(font)
        self.verif_date.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.verif_date.setObjectName("verif_date")
        self.gridlayout.addWidget(self.verif_date, 2, 1, 1, 1)
        self.label_verif_state = QtWidgets.QLabel(parent=self.frame)
        self.label_verif_state.setMinimumSize(QtCore.QSize(100, 25))
        self.label_verif_state.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_verif_state.setFont(font)
        self.label_verif_state.setObjectName("label_verif_state")
        self.gridlayout.addWidget(self.label_verif_state, 3, 0, 1, 1)
        self.verif_state = QtWidgets.QComboBox(parent=self.frame)
        self.verif_state.setMinimumSize(QtCore.QSize(150, 25))
        self.verif_state.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.verif_state.setFont(font)
        self.verif_state.setObjectName("verif_state")
        self.gridlayout.addWidget(self.verif_state, 3, 1, 1, 1)
        self.label_drawing = QtWidgets.QLabel(parent=self.frame)
        self.label_drawing.setMinimumSize(QtCore.QSize(100, 25))
        self.label_drawing.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_drawing.setFont(font)
        self.label_drawing.setObjectName("label_drawing")
        self.gridlayout.addWidget(self.label_drawing, 4, 0, 1, 1)
        self.drawing = QtWidgets.QLineEdit(parent=self.frame)
        self.drawing.setMinimumSize(QtCore.QSize(150, 25))
        self.drawing.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.drawing.setFont(font)
        self.drawing.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.drawing.setObjectName("drawing")
        self.gridlayout.addWidget(self.drawing, 4, 1, 1, 1)
        self.label_obs = QtWidgets.QLabel(parent=self.frame)
        self.label_obs.setMinimumSize(QtCore.QSize(75, 25))
        self.label_obs.setMaximumSize(QtCore.QSize(75, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_obs.setFont(font)
        self.label_obs.setObjectName("label_obs")
        self.gridlayout.addWidget(self.label_obs, 5, 0, 1, 1)
        self.notes = QtWidgets.QTextEdit(parent=self.frame)
        self.notes.setMinimumSize(QtCore.QSize(150, 25))
        self.notes.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.notes.setFont(font)
        self.notes.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.notes.setObjectName("notes")
        self.gridlayout.addWidget(self.notes, 5, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridlayout, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_2.addItem(spacerItem2, 2, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Button_Insert = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Insert.setEnabled(True)
        self.Button_Insert.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Insert.setMinimumSize(QtCore.QSize(100, 35))
        self.Button_Insert.setMaximumSize(QtCore.QSize(100, 35))
        self.Button_Insert.setAutoDefault(True)
        self.Button_Insert.setObjectName("Button_Insert")
        self.horizontalLayout.addWidget(self.Button_Insert)
        spacerItem1 = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.Button_Cancel = QtWidgets.QPushButton(parent=self.frame)
        self.Button_Cancel.setEnabled(True)
        self.Button_Cancel.setMinimumSize(QtCore.QSize(100, 35))
        self.Button_Cancel.setMaximumSize(QtCore.QSize(100, 35))
        self.Button_Cancel.setAutoDefault(True)
        self.Button_Cancel.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.Button_Cancel.setObjectName("Button_Cancel")
        self.horizontalLayout.addWidget(self.Button_Cancel)
        self.gridLayout_2.addLayout(self.horizontalLayout, 3, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem4, 4, 0, 1, 1)
        Verif_M_DrawingInsert_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=Verif_M_DrawingInsert_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 450, 22))
        self.menubar.setObjectName("menubar")
        Verif_M_DrawingInsert_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=Verif_M_DrawingInsert_Window)
        self.statusbar.setObjectName("statusbar")
        Verif_M_DrawingInsert_Window.setStatusBar(self.statusbar)
        Verif_M_DrawingInsert_Window.setWindowFlags(QtCore.Qt.WindowType.WindowMinimizeButtonHint)

        actual_date = date.today().strftime("%d/%m/%Y")
        self.verif_date.setText(actual_date)

        self.num_order.setText(self.numorder)
        self.load_values()

        self.retranslateUi(Verif_M_DrawingInsert_Window)
        self.Button_Cancel.clicked.connect(Verif_M_DrawingInsert_Window.close) # type: ignore
        self.Button_Insert.clicked.connect(self.insert_m_drawing)
        QtCore.QMetaObject.connectSlotsByName(Verif_M_DrawingInsert_Window)


    def retranslateUi(self, Verif_M_DrawingInsert_Window):
        _translate = QtCore.QCoreApplication.translate
        Verif_M_DrawingInsert_Window.setWindowTitle(_translate("Verif_M_DrawingInsert_Window", "Verificación Planos M"))
        self.Button_Insert.setText(_translate("Verif_M_DrawingInsert_Window", "Insertar"))
        self.Button_Cancel.setText(_translate("Verif_M_DrawingInsert_Window", "Cancelar"))
        self.label_num_order.setText(_translate("Verif_M_DrawingInsert_Window", "Nº Pedido:"))
        self.label_obs.setText(_translate("Verif_M_DrawingInsert_Window", "Obs.:"))
        self.label_drawing.setText(_translate("Verif_M_DrawingInsert_Window", "Nº Plano:"))
        self.label_verif_date.setText(_translate("Verif_M_DrawingInsert_Window", "Fecha:"))
        self.label_verif_state.setText(_translate("Verif_PpiInsert_Window", "Estado:"))


    def insert_m_drawing(self):
        num_order = self.num_order.text()
        notes = self.notes.toPlainText()
        verif_date = self.verif_date.text()
        drawing = self.drawing.text()
        verif_state = self.verif_state.currentText()

        if num_order == "" or (verif_date == "" or drawing == ""):
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Verificación Planos M")
            dlg.setText("Rellene todos los campos. Solo el campo de observaciones puede quedar vacío")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()

        elif not re.match(r'^\d{2}[/\-]\d{2}[/\-]\d{4}$', verif_date):
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Verificación Planos M")
            dlg.setText("La fecha debe tener formato dd/mm/yyyy o dd-mm-yyyy")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()
            del dlg, new_icon

        else:
            commands_checkorder = ("""
                        SELECT *
                        FROM orders
                        WHERE "num_order" = %s
                        """)
            conn = None
            try:
            # read the connection parameters
                params = config()
            # connect to the PostgreSQL server
                conn = psycopg2.connect(**params)
                cur = conn.cursor()
            # execution of commands one by one
                cur.execute(commands_checkorder,(num_order,))
                results = cur.fetchall()
                match = list(filter(lambda x:num_order in x, results))
            # close communication with the PostgreSQL database server
                cur.close()
            # commit the changes
                conn.commit()

            except (Exception, psycopg2.DatabaseError) as error:
                dlg = QtWidgets.QMessageBox()
                new_icon = QtGui.QIcon()
                new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                dlg.setWindowIcon(new_icon)
                dlg.setWindowTitle("ERP EIPSA")
                dlg.setText("Ha ocurrido el siguiente error:\n"
                            + str(error))
                dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                dlg.exec()
                del dlg, new_icon

            finally:
                if conn is not None:
                    conn.close()

            if len(match) == 0:
                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Verificación Planos M")
                    dlg.setText("El número de pedido introducido no existe")
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
                    dlg.exec()
    
            else:
                commands_insert_m_drawing = ("""
                            INSERT INTO verification."m_drawing_verification" (num_order, drawing_number, verif_m_drawing_date, verif_m_drawing_state, verif_m_drawing_obs) 
                            VALUES(%s, %s, %s, %s, %s)
                            """)
                conn = None
                try:
                # read the connection parameters
                    params = config()
                # connect to the PostgreSQL server
                    conn = psycopg2.connect(**params)
                    cur = conn.cursor()
                # execution of commands
                    cur.execute(commands_insert_m_drawing, (num_order, drawing, verif_date, verif_state, notes, ))
                # close communication with the PostgreSQL database server
                    cur.close()
                # commit the changes
                    conn.commit()

                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Verificación Planos M")
                    dlg.setText("Datos insertados con éxito")
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Information)
                    dlg.exec()

                    self.num_order.setText('')
                    self.notes.setText('')

                except (Exception, psycopg2.DatabaseError) as error:
                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("Verificación Planos M")
                    dlg.setText("Ha ocurrido el siguiente error:\n"
                                + str(error))
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                    dlg.exec()
                    del dlg, new_icon

                finally:
                    if conn is not None:
                        conn.close()


    def load_values(self):
        query_states = ("""
                            SELECT "state_verif"
                            FROM verification.states_verification
                            ORDER BY "id"
                            """)
        conn = None
        try:
        # read the connection parameters
            params = config()
        # connect to the PostgreSQL server
            conn = psycopg2.connect(**params)
            cur = conn.cursor()
        # execution of commands
            cur.execute(query_states)
            results = cur.fetchall()
            list_states = [x[0] for x in results]
        except (Exception, psycopg2.DatabaseError) as error:
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("ERP EIPSA")
            dlg.setText("Ha ocurrido el siguiente error:\n"
                        + str(error))
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
            dlg.exec()
            del dlg, new_icon
        finally:
            if conn is not None:
                conn.close()

        self.verif_state.addItems(list_states)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Verif_M_DrawingInsert_Window = QtWidgets.QMainWindow()
    ui = Ui_Verif_M_DrawingInsert_Window('P-23/001')
    ui.setupUi(Verif_M_DrawingInsert_Window)
    Verif_M_DrawingInsert_Window.show()
    sys.exit(app.exec())