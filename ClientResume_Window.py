# Form implementation generated from reading ui file 'ClientResume_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import psycopg2
from config import config
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
from matplotlib import ticker
from datetime import *
import numpy as np
import os

basedir = r"\\nas01\DATOS\Comunes\EIPSA-ERP"


class Ui_ClientResume_Window(object):
    def __init__(self, clientname):
        self.clientname=clientname

    # def __init__(self):
    #     self.clientname='AXIOM'


    def setupUi(self, ClientResume_Window):
        ClientResume_Window.setObjectName("ClientResume_Window")
        ClientResume_Window.resize(1165, 945)
        ClientResume_Window.setMinimumSize(QtCore.QSize(1165, 945))
        # ClientResume_Window.setMaximumSize(QtCore.QSize(1165, 945))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        ClientResume_Window.setWindowIcon(icon)
        ClientResume_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255)\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=ClientResume_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(1145, 860))
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_Frame = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_Frame.setObjectName("gridLayout_Frame")
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_Frame.addItem(spacerItem1, 0, 0, 1, 1)
        self.gridLayout1 = QtWidgets.QGridLayout()
        self.gridLayout1.setSpacing(0)
        self.gridLayout1.setObjectName("gridLayout1")
        self.label_client = QtWidgets.QLabel(parent=self.frame)
        self.label_client.setMinimumSize(QtCore.QSize(100, 25))
        self.label_client.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_client.setFont(font)
        self.label_client.setObjectName("label_client")
        self.gridLayout1.addWidget(self.label_client, 0, 0, 1, 1)
        self.label_clientname = QtWidgets.QLabel(parent=self.frame)
        self.label_clientname.setMinimumSize(QtCore.QSize(600, 25))
        self.label_clientname.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        self.label_clientname.setFont(font)
        self.label_clientname.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_clientname.setObjectName("label_clientname")
        self.gridLayout1.addWidget(self.label_clientname, 0, 1, 1, 2)
        spacerItem2 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout1.addItem(spacerItem2, 1, 1, 1, 1)
        self.label_year = QtWidgets.QLabel(parent=self.frame)
        self.label_year.setMinimumSize(QtCore.QSize(100, 25))
        self.label_year.setMaximumSize(QtCore.QSize(100, 25))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.label_year.setFont(font)
        self.label_year.setObjectName("label_year")
        self.gridLayout1.addWidget(self.label_year, 2, 0, 1, 1)
        self.year1_CustomerResume = QtWidgets.QComboBox(parent=self.frame)
        self.year1_CustomerResume.setMinimumSize(QtCore.QSize(150, 25))
        self.year1_CustomerResume.setMaximumSize(QtCore.QSize(150, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.year1_CustomerResume.setFont(font)
        self.year1_CustomerResume.setObjectName("year1_CustomerResume")
        self.gridLayout1.addWidget(self.year1_CustomerResume, 2, 1, 1, 1)
        self.year2_CustomerResume = QtWidgets.QComboBox(parent=self.frame)
        self.year2_CustomerResume.setMinimumSize(QtCore.QSize(150, 25))
        self.year2_CustomerResume.setMaximumSize(QtCore.QSize(150, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.year2_CustomerResume.setFont(font)
        self.year2_CustomerResume.setObjectName("year2_CustomerResume")
        self.gridLayout1.addWidget(self.year2_CustomerResume, 2, 2, 1, 1)
        self.gridLayout_Frame.addLayout(self.gridLayout1, 1, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        self.gridLayout_Frame.addItem(spacerItem3, 2, 0, 1, 1)
        self.widgetspecial = QtWidgets.QWidget(parent=self.frame)
        self.widgetspecial.setObjectName("widgetspecial")
        self.gridLayout_Frame.addWidget(self.widgetspecial, 3, 0, 1, 1)
        self.gridLayout.addWidget(self.frame, 0, 0, 1, 1)
        ClientResume_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=ClientResume_Window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1165, 22))
        self.menubar.setObjectName("menubar")
        ClientResume_Window.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=ClientResume_Window)
        self.statusbar.setObjectName("statusbar")
        ClientResume_Window.setStatusBar(self.statusbar)
        self.gridLayout2 = None

        commands_loadyears = f"SELECT client, offer_year FROM offers WHERE client = '{self.clientname}'"
        conn = None
        try:
        # read the connection parameters
            params = config()
        # connect to the PostgreSQL server
            conn = psycopg2.connect(**params)
            cur = conn.cursor()
        # execution of commands
            cur.execute(commands_loadyears)
            results_years=cur.fetchall()
        # close communication with the PostgreSQL database server
            cur.close()
        # commit the changes
            conn.commit()
        except (Exception, psycopg2.DatabaseError) as error:
            print(error)
        finally:
            if conn is not None:
                conn.close()

        list_years = [''] + list(set([str(x[1]) for x in results_years]))
        self.year1_CustomerResume.addItems(sorted(list_years))
        self.year2_CustomerResume.addItems(sorted(list_years))

        self.retranslateUi(ClientResume_Window)
        QtCore.QMetaObject.connectSlotsByName(ClientResume_Window)
        self.year1_CustomerResume.currentIndexChanged.connect(self.loadresults)
        self.year2_CustomerResume.currentIndexChanged.connect(self.loadresults)


    def retranslateUi(self, ClientResume_Window):
        _translate = QtCore.QCoreApplication.translate
        ClientResume_Window.setWindowTitle(_translate("ClientResume_Window", "Resumen Cliente"))
        self.label_client.setText(_translate("ClientResume_Window", "Cliente:"))
        self.label_clientname.setText(_translate("ClientResume_Window", self.clientname))
        self.label_year.setText(_translate("ClientResume_Window", "Año:"))


    def loadresults(self):
        if not self.year2_CustomerResume.currentText() == '':
            year1 = int(self.year1_CustomerResume.currentText())
            year2 = int(self.year2_CustomerResume.currentText())

            if year2 < year1:
                dlg = QtWidgets.QMessageBox()
                new_icon = QtGui.QIcon()
                new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                dlg.setWindowIcon(new_icon)
                dlg.setWindowTitle("ERP EIPSA")
                dlg.setText("El segundo año no puede ser menor que el primero")
                dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
                dlg.exec()
                del dlg, new_icon

            else:
                num_results = year2 - year1

                widget_to_delete = self.frame.findChild(QtWidgets.QWidget, "widgetspecial")
                if widget_to_delete is not None:
                    widget_to_delete.deleteLater()

                self.remove_layout(self.gridLayout2)

                widget_to_delete = self.frame.findChild(QtWidgets.QWidget, "widget_2")
                if widget_to_delete is not None:
                    widget_to_delete.deleteLater()

                if hasattr(self, 'canvas1'):
                    self.canvas1.setParent(None)
                    self.canvas1.deleteLater()

                self.gridLayout2 = QtWidgets.QGridLayout()
                self.gridLayout2.setObjectName("gridLayout2")
                self.vLayout1 = QtWidgets.QVBoxLayout()
                self.vLayout1.setObjectName("vLayout1")
                self.label_Adjnumoffers = QtWidgets.QLabel(parent=self.frame)
                self.label_Adjnumoffers.setMinimumSize(QtCore.QSize(120, 25))
                self.label_Adjnumoffers.setMaximumSize(QtCore.QSize(120, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Adjnumoffers.setFont(font)
                self.label_Adjnumoffers.setObjectName("label_Adjnumoffers")
                self.label_Adjnumoffers.setText("Adjudicado:")
                self.vLayout1.addWidget(self.label_Adjnumoffers)
                self.label_Disnumoffers = QtWidgets.QLabel(parent=self.frame)
                self.label_Disnumoffers.setMinimumSize(QtCore.QSize(120, 25))
                self.label_Disnumoffers.setMaximumSize(QtCore.QSize(120, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Disnumoffers.setFont(font)
                self.label_Disnumoffers.setObjectName("label_Disnumoffers")
                self.label_Disnumoffers.setText("Desestimado:")
                self.vLayout1.addWidget(self.label_Disnumoffers)
                self.gridLayout2.addLayout(self.vLayout1, 0, 0, 1, 1)
                self.vLayout2 = QtWidgets.QVBoxLayout()
                self.vLayout2.setObjectName("vLayout2")
                self.numoffers_adj = QtWidgets.QLabel(parent=self.frame)
                self.numoffers_adj.setMinimumSize(QtCore.QSize(125, 25))
                self.numoffers_adj.setMaximumSize(QtCore.QSize(125, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.numoffers_adj.setFont(font)
                self.numoffers_adj.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.numoffers_adj.setObjectName("numoffers_adj")
                self.vLayout2.addWidget(self.numoffers_adj)
                self.numoffers_dis = QtWidgets.QLabel(parent=self.frame)
                self.numoffers_dis.setMinimumSize(QtCore.QSize(125, 25))
                self.numoffers_dis.setMaximumSize(QtCore.QSize(125, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.numoffers_dis.setFont(font)
                self.numoffers_dis.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.numoffers_dis.setObjectName("numoffers_dis")
                self.vLayout2.addWidget(self.numoffers_dis)
                self.gridLayout2.addLayout(self.vLayout2, 0, 1, 1, 1)
                spacerItem4 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
                self.gridLayout2.addItem(spacerItem4, 0, 2, 1, 1)
                self.ratio_numoffers = QtWidgets.QLabel(parent=self.frame)
                self.ratio_numoffers.setMinimumSize(QtCore.QSize(90, 25))
                self.ratio_numoffers.setMaximumSize(QtCore.QSize(90, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.ratio_numoffers.setFont(font)
                self.ratio_numoffers.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.ratio_numoffers.setObjectName("ratio_numoffers")
                self.gridLayout2.addWidget(self.ratio_numoffers, 0, 5, 1, 1)
                spacerItem5 = QtWidgets.QSpacerItem(15, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
                self.gridLayout2.addItem(spacerItem5, 0, 6, 1, 1)
                self.line1 = QtWidgets.QFrame(parent=self.frame)
                self.line1.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                self.line1.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                self.line1.setObjectName("line1")
                self.gridLayout2.addWidget(self.line1, 0, 7, 1, 1)
                spacerItem6 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
                self.gridLayout2.addItem(spacerItem6, 0, 8, 1, 1)
                self.vLayout3 = QtWidgets.QVBoxLayout()
                self.vLayout3.setObjectName("vLayout3")
                self.label_adjamount = QtWidgets.QLabel(parent=self.frame)
                self.label_adjamount.setMinimumSize(QtCore.QSize(120, 25))
                self.label_adjamount.setMaximumSize(QtCore.QSize(120, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_adjamount.setFont(font)
                self.label_adjamount.setObjectName("label_adjamount")
                self.label_adjamount.setText("Adjudicado:")
                self.vLayout3.addWidget(self.label_adjamount)
                self.label_disamount = QtWidgets.QLabel(parent=self.frame)
                self.label_disamount.setMinimumSize(QtCore.QSize(120, 25))
                self.label_disamount.setMaximumSize(QtCore.QSize(120, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_disamount.setFont(font)
                self.label_disamount.setObjectName("label_disamount")
                self.label_disamount.setText("Desestimado:")
                self.vLayout3.addWidget(self.label_disamount)
                self.gridLayout2.addLayout(self.vLayout3, 0, 10, 1, 1)
                self.vLayout4 = QtWidgets.QVBoxLayout()
                self.vLayout4.setObjectName("vLayout4")
                self.amount_adj = QtWidgets.QLabel(parent=self.frame)
                self.amount_adj.setMinimumSize(QtCore.QSize(125, 25))
                self.amount_adj.setMaximumSize(QtCore.QSize(125, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.amount_adj.setFont(font)
                self.amount_adj.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.amount_adj.setObjectName("amount_adj")
                self.vLayout4.addWidget(self.amount_adj)
                self.amount_dis = QtWidgets.QLabel(parent=self.frame)
                self.amount_dis.setMinimumSize(QtCore.QSize(125, 25))
                self.amount_dis.setMaximumSize(QtCore.QSize(125, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.amount_dis.setFont(font)
                self.amount_dis.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.amount_dis.setObjectName("amount_dis")
                self.vLayout4.addWidget(self.amount_dis)
                self.gridLayout2.addLayout(self.vLayout4, 0, 11, 1, 1)
                spacerItem7 = QtWidgets.QSpacerItem(30, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
                self.gridLayout2.addItem(spacerItem7, 0, 12, 1, 1)
                self.ratio_amount = QtWidgets.QLabel(parent=self.frame)
                self.ratio_amount.setMinimumSize(QtCore.QSize(90, 25))
                self.ratio_amount.setMaximumSize(QtCore.QSize(90, 25))
                font = QtGui.QFont()
                font.setPointSize(10)
                self.ratio_amount.setFont(font)
                self.ratio_amount.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.ratio_amount.setObjectName("ratio_amount")
                self.gridLayout2.addWidget(self.ratio_amount, 0, 15, 1, 1)
                spacerItem8 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
                self.gridLayout2.addItem(spacerItem8, 1, 7, 1, 1)
                self.label_Adj1 = QtWidgets.QLabel(parent=self.frame)
                self.label_Adj1.setMinimumSize(QtCore.QSize(0, 25))
                self.label_Adj1.setMaximumSize(QtCore.QSize(16777215, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Adj1.setFont(font)
                self.label_Adj1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Adj1.setObjectName("label_Adj1")
                self.label_Adj1.setText("Adjudicado")
                self.gridLayout2.addWidget(self.label_Adj1, 3, 1, 1, 1)
                self.label_Dis1 = QtWidgets.QLabel(parent=self.frame)
                self.label_Dis1.setMinimumSize(QtCore.QSize(0, 25))
                self.label_Dis1.setMaximumSize(QtCore.QSize(16777215, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Dis1.setFont(font)
                self.label_Dis1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Dis1.setObjectName("label_Dis1")
                self.label_Dis1.setText("Desestimado")
                self.gridLayout2.addWidget(self.label_Dis1, 3, 3, 1, 1)
                self.label_Ratio1 = QtWidgets.QLabel(parent=self.frame)
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Ratio1.setFont(font)
                self.label_Ratio1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Ratio1.setObjectName("label_Ratio1")
                self.label_Ratio1.setText("Ratio")
                self.gridLayout2.addWidget(self.label_Ratio1, 3, 5, 1, 1)
                self.label_Adj2 = QtWidgets.QLabel(parent=self.frame)
                self.label_Adj2.setMinimumSize(QtCore.QSize(0, 25))
                self.label_Adj2.setMaximumSize(QtCore.QSize(16777215, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Adj2.setFont(font)
                self.label_Adj2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Adj2.setObjectName("label_Adj2")
                self.label_Adj2.setText("Adjudicado")
                self.gridLayout2.addWidget(self.label_Adj2, 3, 11, 1, 1)
                self.label_Dis2 = QtWidgets.QLabel(parent=self.frame)
                self.label_Dis2.setMinimumSize(QtCore.QSize(0, 25))
                self.label_Dis2.setMaximumSize(QtCore.QSize(16777215, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Dis2.setFont(font)
                self.label_Dis2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Dis2.setObjectName("label_Dis2")
                self.label_Dis2.setText("Desestimado")
                self.gridLayout2.addWidget(self.label_Dis2, 3, 13, 1, 1)
                self.label_Ratio2 = QtWidgets.QLabel(parent=self.frame)
                self.label_Ratio2.setMinimumSize(QtCore.QSize(0, 25))
                self.label_Ratio2.setMaximumSize(QtCore.QSize(16777215, 25))
                font = QtGui.QFont()
                font.setPointSize(11)
                font.setBold(True)
                self.label_Ratio2.setFont(font)
                self.label_Ratio2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                self.label_Ratio2.setObjectName("label_Ratio2")
                self.label_Ratio2.setText("Ratio")
                self.gridLayout2.addWidget(self.label_Ratio2, 3, 15, 1, 1)
                self.gridLayout_Frame.addLayout(self.gridLayout2, 3, 0, 1, 1)

                row_grid = 4
                sumofadj=0
                sumofdis=0
                sumamountadj=0
                sumamountdis=0

                for i in range(num_results + 1):
                    commands_awarded = f"""SELECT "client", COUNT("num_offer"), CAST(SUM("offer_amount") AS numeric)
                        FROM offers
                        WHERE ("client" = '{self.clientname}'
                        AND
                        "state" = 'Adjudicada'
                        AND
                        "offer_year" = '{year1 + i}' )
                        GROUP BY "client"
                        """
                    commands_dismissed = f"""SELECT "client", COUNT("num_offer"), CAST(SUM("offer_amount") AS numeric)
                        FROM offers
                        WHERE ("client" = '{self.clientname}'
                        AND
                        "state" = 'Desestimada'
                        AND
                        "offer_year" = '{year1 + i}' )
                        GROUP BY "client"
                        """
                    conn = None
                    try:
                    # read the connection parameters
                        params = config()
                    # connect to the PostgreSQL server
                        conn = psycopg2.connect(**params)
                        cur = conn.cursor()
                    # execution of commands
                        cur.execute(commands_awarded)
                        results_awarded=cur.fetchall()
                        cur.execute(commands_dismissed)
                        results_dismissed=cur.fetchall()
                    # close communication with the PostgreSQL database server
                        cur.close()
                    # commit the changes
                        conn.commit()
                    except (Exception, psycopg2.DatabaseError) as error:
                        print(error)
                    finally:
                        if conn is not None:
                            conn.close()

                    ofadj = results_awarded[0][1] if not len(results_awarded) == 0 else 0
                    ofdis = results_dismissed[0][1] if not len(results_dismissed) == 0 else 0
                    ratioof = (ofadj / (ofadj + ofdis)) * 100 if not len(results_awarded) == 0 else 0
                    amountadj = float(results_awarded[0][2] if not len(results_awarded) == 0 else 0)
                    amountdis = float(results_dismissed[0][2] if not len(results_dismissed) == 0 else 0)
                    ratioamount = 0 if (amountadj + amountdis == 0) else ((amountadj / (amountadj + amountdis)) * 100 if not len(results_awarded)==0 else 0)

                    self.label_yearof = QtWidgets.QLabel(parent=self.frame)
                    self.label_yearof.setMinimumSize(QtCore.QSize(0, 25))
                    self.label_yearof.setMaximumSize(QtCore.QSize(16777215, 25))
                    font = QtGui.QFont()
                    font.setPointSize(11)
                    font.setBold(True)
                    self.label_yearof.setFont(font)
                    self.label_yearof.setObjectName("label_yearof")
                    self.label_yearof.setText(str(year1 + i))
                    self.gridLayout2.addWidget(self.label_yearof, row_grid, 0, 1, 1)

                    self.label_ofadj = QtWidgets.QLabel(parent=self.frame)
                    self.label_ofadj.setMinimumSize(QtCore.QSize(125, 0))
                    self.label_ofadj.setMaximumSize(QtCore.QSize(125, 16777215))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_ofadj.setFont(font)
                    self.label_ofadj.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_ofadj.setObjectName("label_ofadj")
                    self.label_ofadj.setText(str(ofadj) + " ofertas")
                    self.gridLayout2.addWidget(self.label_ofadj, row_grid, 1, 1, 1)

                    self.line_row_1 = QtWidgets.QFrame(parent=self.frame)
                    self.line_row_1.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                    self.line_row_1.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                    self.line_row_1.setObjectName("line_row_1")
                    self.line_row_1.setMaximumSize(QtCore.QSize(16777215, 25))
                    self.gridLayout2.addWidget(self.line_row_1, row_grid, 2, 1, 1)

                    self.label_ofdis = QtWidgets.QLabel(parent=self.frame)
                    self.label_ofdis.setMinimumSize(QtCore.QSize(125, 0))
                    self.label_ofdis.setMaximumSize(QtCore.QSize(125, 16777215))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_ofdis.setFont(font)
                    self.label_ofdis.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_ofdis.setObjectName("label_ofdes")
                    self.label_ofdis.setText(str(ofdis) + " ofertas")
                    self.gridLayout2.addWidget(self.label_ofdis, row_grid, 3, 1, 1)

                    self.line_row_2 = QtWidgets.QFrame(parent=self.frame)
                    self.line_row_2.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                    self.line_row_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                    self.line_row_2.setObjectName("line_row_2")
                    self.line_row_2.setMaximumSize(QtCore.QSize(16777215, 25))
                    self.gridLayout2.addWidget(self.line_row_2, row_grid, 4, 1, 1)

                    self.label_ofratio = QtWidgets.QLabel(parent=self.frame)
                    self.label_ofratio.setMinimumSize(QtCore.QSize(90, 25))
                    self.label_ofratio.setMaximumSize(QtCore.QSize(90, 25))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_ofratio.setFont(font)
                    self.label_ofratio.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_ofratio.setObjectName("label_ofratio")
                    self.label_ofratio.setText('{:,.2f}'.format(ratioof).replace(",", "X").replace(".", ",").replace("X", ".") + " %")
                    self.gridLayout2.addWidget(self.label_ofratio, row_grid, 5, 1, 1)

                    self.line_row_3 = QtWidgets.QFrame(parent=self.frame)
                    self.line_row_3.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                    self.line_row_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                    self.line_row_3.setObjectName("line_row_3")
                    self.line_row_3.setMaximumSize(QtCore.QSize(16777215, 25))
                    self.gridLayout2.addWidget(self.line_row_3, row_grid, 7, 1, 1)

                    self.label_yearamount = QtWidgets.QLabel(parent=self.frame)
                    self.label_yearamount.setMinimumSize(QtCore.QSize(0, 25))
                    self.label_yearamount.setMaximumSize(QtCore.QSize(16777215, 25))
                    font = QtGui.QFont()
                    font.setPointSize(11)
                    font.setBold(True)
                    self.label_yearamount.setFont(font)
                    self.label_yearamount.setObjectName("label_yearamount")
                    self.label_yearamount.setText(str(year1 + i))
                    self.gridLayout2.addWidget(self.label_yearamount, row_grid, 10, 1, 1)

                    self.label_amountadj = QtWidgets.QLabel(parent=self.frame)
                    self.label_amountadj.setMinimumSize(QtCore.QSize(125, 0))
                    self.label_amountadj.setMaximumSize(QtCore.QSize(125, 16777215))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_amountadj.setFont(font)
                    self.label_amountadj.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_amountadj.setObjectName("label_amountadj")
                    self.label_amountadj.setText("{:,.2f} €".format(amountadj).replace(",", "X").replace(".", ",").replace("X", "."))
                    self.gridLayout2.addWidget(self.label_amountadj, row_grid, 11, 1, 1)

                    self.line_row_4 = QtWidgets.QFrame(parent=self.frame)
                    self.line_row_4.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                    self.line_row_4.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                    self.line_row_4.setObjectName("line_row_4")
                    self.line_row_4.setMaximumSize(QtCore.QSize(16777215, 25))
                    self.gridLayout2.addWidget(self.line_row_4, row_grid, 12, 1, 1)

                    self.label_amountdis = QtWidgets.QLabel(parent=self.frame)
                    self.label_amountdis.setMinimumSize(QtCore.QSize(125, 0))
                    self.label_amountdis.setMaximumSize(QtCore.QSize(125, 16777215))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_amountdis.setFont(font)
                    self.label_amountdis.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_amountdis.setObjectName("label_amountdes")
                    self.label_amountdis.setText("{:,.2f} €".format(amountdis).replace(",", "X").replace(".", ",").replace("X", "."))
                    self.gridLayout2.addWidget(self.label_amountdis, row_grid, 13, 1, 1)

                    self.line_row_5 = QtWidgets.QFrame(parent=self.frame)
                    self.line_row_5.setFrameShape(QtWidgets.QFrame.Shape.VLine)
                    self.line_row_5.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
                    self.line_row_5.setObjectName("line_row_5")
                    self.line_row_5.setMaximumSize(QtCore.QSize(16777215, 25))
                    self.gridLayout2.addWidget(self.line_row_5, row_grid, 14, 1, 1)

                    self.label_amountratio = QtWidgets.QLabel(parent=self.frame)
                    self.label_amountratio.setMinimumSize(QtCore.QSize(90, 25))
                    self.label_amountratio.setMaximumSize(QtCore.QSize(90, 25))
                    font = QtGui.QFont()
                    font.setPointSize(10)
                    self.label_amountratio.setFont(font)
                    self.label_amountratio.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
                    self.label_amountratio.setObjectName("label_amountratio")
                    self.label_amountratio.setText('{:,.2f}'.format(ratioamount).replace(",", "X").replace(".", ",").replace("X", ".") + " %")
                    self.gridLayout2.addWidget(self.label_amountratio, row_grid, 15, 1, 1)

                    row_grid += 1
                    sumofadj += ofadj
                    sumofdis += ofdis
                    sumamountadj += amountadj
                    sumamountdis += amountdis

                sumofratio = (sumofadj / (sumofadj + sumofdis)) * 100
                sumamountratio = (sumamountadj / (sumamountadj + sumamountdis)) * 100

                self.numoffers_adj.setText(str(sumofadj) + " ofertas")
                self.numoffers_dis.setText(str(sumofdis) + " ofertas")
                self.ratio_numoffers.setText('{:,.2f}'.format(sumofratio).replace(",", "X").replace(".", ",").replace("X", ".") + " %")
                self.amount_adj.setText("{:,.2f} €".format(sumamountadj).replace(",", "X").replace(".", ",").replace("X", "."))
                self.amount_dis.setText("{:,.2f} €".format(sumamountdis).replace(",", "X").replace(".", ",").replace("X", "."))
                self.ratio_amount.setText('{:,.2f}'.format(sumamountratio).replace(",", "X").replace(".", ",").replace("X", ".") + " %")

                spacerItem9 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
                self.gridLayout_Frame.addItem(spacerItem9, 4, 0, 1, 1)
                self.hLayout = QtWidgets.QHBoxLayout()
                self.hLayout.setObjectName("hLayout")

                commands_offered_year = f"""
                            SELECT "offer_year", CAST(SUM("offer_amount") AS numeric)
                            FROM offers
                            WHERE ("state" <> 'Registrada' AND "state" <> 'Estimación'
                            AND
                            "client" = '{self.clientname}'
                            AND
                            "offer_year" BETWEEN '{year1}' AND '{year2}')
                            GROUP BY "offer_year"
                            ORDER BY "offer_year"
                            """
                commands_sold_year = f"""
                            SELECT "offer_year", CAST(SUM("offer_amount") AS numeric)
                            FROM offers
                            WHERE ("state"='Adjudicada'
                            AND
                            "client" = '{self.clientname}'
                            AND
                            "offer_year" BETWEEN '{year1}' AND '{year2}')
                            GROUP BY "offer_year"
                            ORDER BY "offer_year"
                            """
                conn = None
                try:
                # read the connection parameters
                    params = config()
                # connect to the PostgreSQL server
                    conn = psycopg2.connect(**params)
                    cur = conn.cursor()
                # execution of commands
                    cur.execute(commands_offered_year)
                    results_general_offered_year=cur.fetchall()
                    cur.execute(commands_sold_year)
                    results_general_sold_year=cur.fetchall()
                    results_offered_year=list(filter(lambda x:None not in x, results_general_offered_year))
                    results_sold_year=list(filter(lambda x:None not in x, results_general_sold_year))
                # close communication with the PostgreSQL database server
                    cur.close()
                # commit the changes
                    conn.commit()
                except (Exception, psycopg2.DatabaseError) as error:
                    print(error)
                finally:
                    if conn is not None:
                        conn.close()

                bar_width = 0.35

                years_offered=[x[0] for x in results_offered_year]
                amounts_offered_year=[float(x[1]) for x in results_offered_year]
                dict_offered_year = dict(zip(years_offered, amounts_offered_year))
                for i in range(min(years_offered), max(years_offered)+1):
                    if i not in years_offered:
                        dict_offered_year[i] = 0

                dict_offered_year = {key:dict_offered_year[key] for key in sorted(dict_offered_year.keys())}
                final_offered_year=list(dict_offered_year.values())

                years_sold=[x[0] for x in results_sold_year]
                amounts_sold_year=[float(x[1]) for x in results_sold_year]
                dict_sold_year = dict(zip(years_sold, amounts_sold_year))
                for i in (range(min(years_sold), max(years_sold)+1) if len(years_sold) != 0 else range(year1, year2+1)):
                    if i not in years_sold:
                        dict_sold_year[i] = 0

                dict_sold_year = {key:dict_sold_year[key] for key in sorted(dict_sold_year.keys())}
                final_sold_year=list(dict_sold_year.values())

                self.canvas1=FigureCanvas(Figure())
                ax=self.canvas1.figure.subplots()
                bar_positions1 = np.arange(min(years_offered),max(years_offered)+1) - bar_width / 2
                bar_positions2 = np.arange(min(years_offered),max(years_offered)+1) + bar_width / 2
                ax.bar(bar_positions1, final_offered_year, width=bar_width, label='Ofertado')
                ax.bar(bar_positions2, final_sold_year, width=bar_width, label='Adjudicado')
                ax.set_xticks(range(min(years_offered),max(years_offered)+1))
                axticks_x=ticker.FuncFormatter(lambda x,pos: '{:02d}'.format(x-2000))
                axticks_y=ticker.FuncFormatter(self.format_y_ticks)
                ax.xaxis.set_major_formatter(axticks_x)
                ax.yaxis.set_major_formatter(axticks_y)
                ax.set_title('Ofertado/Adjudicado por años')
                ax.set_xlabel('Año')
                ax.set_ylabel('Importe (€)')
                ax.legend(loc='best')

                self.canvas1.setObjectName("Graph1")
                self.hLayout.addWidget(self.canvas1)

                self.widget_2 = QtWidgets.QWidget(parent=self.frame)
                self.widget_2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
        "border: 1px solid")
                self.widget_2.setObjectName("widget_2")
                self.hLayout.addWidget(self.widget_2)
                self.gridLayout_Frame.addLayout(self.hLayout, 5, 0, 1, 1)


#Function to remove the layout to update it when combobox changes
    def remove_layout(self, layout):
        if layout is not None:
            while layout.count():
                item = layout.takeAt(0)
                widget = item.widget()
                if widget is not None:
                    widget.setParent(None)
                    widget.deleteLater()
                else:
                    self.remove_layout(item.layout())


#Function for formatting the y axis of the graphs
    def format_y_ticks(self, y, pos):
        if y >= 1e6:
            return '{:.0f}M'.format(y * 1e-6)
        elif y >= 1e3:
            return '{:.0f}k'.format(y * 1e-3)
        else:
            return '{:d}'.format(int(y))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ClientResume_Window = QtWidgets.QMainWindow()
    ui = Ui_ClientResume_Window()
    ui.setupUi(ClientResume_Window)
    ClientResume_Window.show()
    sys.exit(app.exec())
