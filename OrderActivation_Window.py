# Form implementation generated from reading ui file 'OrderActivation_Window.ui'
#
# Created by: PyQt6 UI code generator 6.4.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import psycopg2
from config import config  
import os
from Email_Styles import email_order_activation, email_order_activation_manager
from datetime import *


basedir = r"\\nas01\DATOS\Comunes\EIPSA-ERP"


class Ui_OrderActivation_Window(object):
    """
    UI class for the Order Activation window.
    """
    def setupUi(self, OrderActivation_Window):
        """
        Sets up the user interface for the OrderActivation_Window.

        Args:
            OrderActivation_Window (QtWidgets.QMainWindow): The main window for the UI setup.
        """
        OrderActivation_Window.setObjectName("OrderActivation_Window")
        OrderActivation_Window.resize(300, 650)
        OrderActivation_Window.setMinimumSize(QtCore.QSize(300, 650))
        OrderActivation_Window.setMaximumSize(QtCore.QSize(300, 650))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        OrderActivation_Window.setWindowIcon(icon)
        OrderActivation_Window.setAutoFillBackground(False)
        OrderActivation_Window.setStyleSheet("QWidget {\n"
"background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
".QFrame {\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:focus{\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=OrderActivation_Window)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_numorder_orderactivation = QtWidgets.QLabel(parent=self.frame)
        self.label_numorder_orderactivation.setEnabled(True)
        self.label_numorder_orderactivation.setMinimumSize(QtCore.QSize(200, 25))
        self.label_numorder_orderactivation.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_numorder_orderactivation.setFont(font)
        self.label_numorder_orderactivation.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_numorder_orderactivation.setObjectName("label_numorder_orderactivation")
        self.verticalLayout.addWidget(self.label_numorder_orderactivation, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.numorder_orderactivation = QtWidgets.QLineEdit(parent=self.frame)
        self.numorder_orderactivation.setEnabled(True)
        self.numorder_orderactivation.setMinimumSize(QtCore.QSize(200, 25))
        self.numorder_orderactivation.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.numorder_orderactivation.setFont(font)
        self.numorder_orderactivation.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.numorder_orderactivation.setObjectName("numorder_orderactivation")
        self.verticalLayout.addWidget(self.numorder_orderactivation, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.label_info_orderactivation = QtWidgets.QLabel(parent=self.frame)
        self.label_info_orderactivation.setEnabled(True)
        self.label_info_orderactivation.setMinimumSize(QtCore.QSize(200, 25))
        self.label_info_orderactivation.setMaximumSize(QtCore.QSize(200, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_info_orderactivation.setFont(font)
        self.label_info_orderactivation.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_info_orderactivation.setObjectName("label_info_orderactivation")
        self.verticalLayout.addWidget(self.label_info_orderactivation, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.label_info_example = QtWidgets.QLabel(parent=self.frame)
        self.label_info_example.setEnabled(True)
        self.label_info_example.setMinimumSize(QtCore.QSize(200, 30))
        self.label_info_example.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.label_info_example.setFont(font)
        self.label_info_example.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_info_example.setObjectName("label_info_example")
        self.verticalLayout.addWidget(self.label_info_example, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.info_orderactivation = QtWidgets.QTextEdit(parent=self.frame)
        self.info_orderactivation.setEnabled(True)
        self.info_orderactivation.setMinimumSize(QtCore.QSize(200, 100))
        self.info_orderactivation.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.info_orderactivation.setFont(font)
        self.info_orderactivation.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.info_orderactivation.setObjectName("info_orderactivation")
        self.verticalLayout.addWidget(self.info_orderactivation, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.label_tests = QtWidgets.QLabel(parent=self.frame)
        self.label_tests.setEnabled(True)
        self.label_tests.setMinimumSize(QtCore.QSize(200, 30))
        self.label_tests.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        self.label_tests.setFont(font)
        self.label_tests.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_tests.setObjectName("label_tests")
        self.verticalLayout.addWidget(self.label_tests, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_pmi = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_pmi.setEnabled(True)
        self.checkbox_pmi.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_pmi.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_pmi.setFont(font)
        self.checkbox_pmi.setObjectName("checkbox_pmi")
        self.checkbox_pmi.setText('PMI')
        self.verticalLayout.addWidget(self.checkbox_pmi, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_ultrasound = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_ultrasound.setEnabled(True)
        self.checkbox_ultrasound.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_ultrasound.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_ultrasound.setFont(font)
        self.checkbox_ultrasound.setObjectName("checkbox_ultrasound")
        self.checkbox_ultrasound.setText('Ultrasonidos')
        self.verticalLayout.addWidget(self.checkbox_ultrasound, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_xray = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_xray.setEnabled(True)
        self.checkbox_xray.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_xray.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_xray.setFont(font)
        self.checkbox_xray.setObjectName("checkbox_xray")
        self.checkbox_xray.setText('Radiografías')
        self.verticalLayout.addWidget(self.checkbox_xray, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_ph_ext = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_ph_ext.setEnabled(True)
        self.checkbox_ph_ext.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_ph_ext.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_ph_ext.setFont(font)
        self.checkbox_ph_ext.setObjectName("checkbox_ph_ext")
        self.checkbox_ph_ext.setText('Prueba Hidráulica Externa')
        self.verticalLayout.addWidget(self.checkbox_ph_ext, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_lp = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_lp.setEnabled(True)
        self.checkbox_lp.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_lp.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_lp.setFont(font)
        self.checkbox_lp.setObjectName("checkbox_lp")
        self.checkbox_lp.setText('Líquidos Penetrantes')
        self.verticalLayout.addWidget(self.checkbox_lp, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_calibration = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_calibration.setEnabled(True)
        self.checkbox_calibration.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_calibration.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_calibration.setFont(font)
        self.checkbox_calibration.setObjectName("checkbox_calibration")
        self.checkbox_calibration.setText('Calibración')
        self.verticalLayout.addWidget(self.checkbox_calibration, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.checkbox_stress = QtWidgets.QCheckBox(parent=self.frame)
        self.checkbox_stress.setEnabled(True)
        self.checkbox_stress.setMinimumSize(QtCore.QSize(200, 30))
        self.checkbox_stress.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.checkbox_stress.setFont(font)
        self.checkbox_stress.setObjectName("checkbox_stress")
        self.checkbox_stress.setText('Cálculos Stress')
        self.verticalLayout.addWidget(self.checkbox_stress, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.generate_orderactivation = QtWidgets.QPushButton(parent=self.frame)
        self.generate_orderactivation.setEnabled(True)
        self.generate_orderactivation.setMinimumSize(QtCore.QSize(200, 35))
        self.generate_orderactivation.setMaximumSize(QtCore.QSize(200, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.generate_orderactivation.setFont(font)
        self.generate_orderactivation.setStyleSheet("QPushButton {\n"
"background-color: #33bdef;\n"
"  border: 1px solid transparent;\n"
"  border-radius: 3px;\n"
"  color: #fff;\n"
"  font-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\n"
"  font-size: 15px;\n"
"  font-weight: 800;\n"
"  line-height: 1.15385;\n"
"  margin: 0;\n"
"  outline: none;\n"
"  padding: 8px .8em;\n"
"  text-align: center;\n"
"  text-decoration: none;\n"
"  vertical-align: baseline;\n"
"  white-space: nowrap;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:focus{\n"
"    background-color: #019ad2;\n"
"    border-color: rgb(0, 0, 0);\n"
"}\n"
"\n"
"QPushButton:focus:pressed {\n"
"    background-color: rgb(1, 140, 190);\n"
"    border-color: rgb(255, 255, 255);\n"
"}")
        self.generate_orderactivation.setAutoDefault(True)
        self.generate_orderactivation.setObjectName("generate_orderactivation")
        self.verticalLayout.addWidget(self.generate_orderactivation, 0, QtCore.Qt.AlignmentFlag.AlignHCenter)
        self.gridLayout_2.addWidget(self.frame, 0, 0, 1, 1, QtCore.Qt.AlignmentFlag.AlignHCenter)
        OrderActivation_Window.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=OrderActivation_Window)
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 275, 22))
        self.menubar.setObjectName("menubar")
        OrderActivation_Window.setMenuBar(self.menubar)

        self.retranslateUi(OrderActivation_Window)
        self.generate_orderactivation.clicked.connect(self.activateorder)
        QtCore.QMetaObject.connectSlotsByName(OrderActivation_Window)


# Function to translate and updates the text of various UI elements
    def retranslateUi(self, OrderActivation_Window):
        """
        Translates and updates the text of various UI elements.
        """
        _translate = QtCore.QCoreApplication.translate
        OrderActivation_Window.setWindowTitle(_translate("OrderActivation_Window", "Activar Pedido"))
        self.label_numorder_orderactivation.setText(_translate("OrderActivation_Window", "Número Pedido:"))
        self.label_info_orderactivation.setText(_translate("OrderActivation_Window", "Info adicional:"))
        self.label_info_example.setText(_translate("OrderActivation_Window", "Mínimo indicar nº y tipo de equipo.\nEj: Son 25 bridas+placas"))
        self.label_tests.setText(_translate("OrderActivation_Window", "Extras:"))
        self.generate_orderactivation.setText(_translate("OrderActivation_Window", "Activar"))


    def activateorder(self):
        """
        Activates an order by sending an email notification to the relevant parties.
        """
        numorder=self.numorder_orderactivation.text()
        adit_info=self.info_orderactivation.toPlainText()

        extras_list =[]

        if self.checkbox_pmi.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('PMI')

        if self.checkbox_ultrasound.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Ultrasonidos')

        if self.checkbox_xray.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Radiografías')

        if self.checkbox_ph_ext.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Prueba Hidráulica Externa')

        if self.checkbox_lp.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Líquidos Penetrantes')

        if self.checkbox_calibration.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Calibración')

        if self.checkbox_stress.checkState() == QtCore.Qt.CheckState.Checked:
            extras_list.append('Cálculos Stress')

        extras_text = '\n'.join(extras_list)

        if len(adit_info) == 0 or len(numorder) == 0:
            dlg = QtWidgets.QMessageBox()
            new_icon = QtGui.QIcon()
            new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
            dlg.setWindowIcon(new_icon)
            dlg.setWindowTitle("Activar Pedido")
            dlg.setText("Hay que rellenar el nº pedido y la información adicional")
            dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
            dlg.exec()
        else:
            actual_date=date.today()
            actual_date= actual_date.strftime("%d/%m/%Y")

            commands_responsible = ("""SELECT name, surname, email FROM users_data.registration
                                        WHERE username = %s
                                        """)
            commands_mail_sendto = ("""SELECT username, email FROM users_data.registration
                                WHERE (profile = 'Técnico'
                                OR
                                profile = 'Compras'
                                OR
                                profile = 'Taller'
                                )
                                """)
            commands_mail_manager = ("""SELECT email FROM users_data.registration
                                WHERE (profile = 'Dirección')
                                """)
            commands_queryorder = ("""
                                    SELECT orders."num_order",offers."responsible", orders."num_ref_order", offers."client", offers."final_client", TO_CHAR(orders."expected_date", 'DD-MM-YYYY'), offers."delivery_time", orfers."order_amount"
                                    FROM offers
                                    INNER JOIN orders ON (offers."num_offer"=orders."num_offer")
                                    WHERE orders."num_order" = %s
                                    ORDER BY orders."num_order"
                                    """)
            commands_ultrasound = ("""UPDATE orders
                                        SET order_extras = %s
                                        WHERE num_order = %s""")
            try:
                params = config()
                conn = psycopg2.connect(**params)
                cursor = conn.cursor()

                if self.checkbox_ultrasound.checkState() == QtCore.Qt.CheckState.Checked:
                    cursor.execute(commands_ultrasound, ("Ultrasonidos", numorder,))

                cursor.execute(commands_queryorder, (numorder,))
                results_queryorder=cursor.fetchall()
                if not len(results_queryorder) > 0:
                    dlg = QtWidgets.QMessageBox()
                    new_icon = QtGui.QIcon()
                    new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                    dlg.setWindowIcon(new_icon)
                    dlg.setWindowTitle("TAGS pedido")
                    dlg.setText("El pedido no se encuentra registrado en el sistema")
                    dlg.setIcon(QtWidgets.QMessageBox.Icon.Warning)
                    dlg.exec()
                # Closing cursor and database connection
                    conn.commit()
                    cursor.close()

                else:
                    conn = None
                    try:
                    # read the connection parameters
                        params = config()
                    # connect to the PostgreSQL server
                        conn = psycopg2.connect(**params)
                        cur = conn.cursor()

                        username_responsible = results_queryorder[0][1]
                        num_ref_order = results_queryorder[0][2]
                        client = results_queryorder[0][3]
                        final_client = results_queryorder[0][4]
                        expected_date = results_queryorder[0][5]
                        delivery_time = results_queryorder[0][6]
                        order_amount = results_queryorder[0][7]
                    # execution of commands
                        cur.execute(commands_responsible, (username_responsible,))
                        results_responsible=cur.fetchall()
                        name_responsible = results_responsible[0][0] + " " + results_responsible[0][1]
                        email_responsible = results_responsible[0][2]

                        cur.execute(commands_mail_sendto)
                        results_mailto=cur.fetchall()
                        mails_sendto = [x[1] for x in results_mailto]

                        mails_copy = []
                        mails_copy.append('ana-calvo@eipsa.es')

                        cur.execute(commands_mail_manager)
                        results_manager=cur.fetchall()
                        mails_manager = [x[0] for x in results_manager]

                        mail = email_order_activation(numorder, num_ref_order, client, final_client, expected_date, delivery_time, name_responsible, mails_sendto, mails_copy, adit_info, email_responsible, extras_text)
                        mail.send_email()

                        mail = email_order_activation_manager(numorder, num_ref_order, client, final_client, expected_date, delivery_time, name_responsible, mails_manager, mails_copy, adit_info, email_responsible, extras_text, order_amount)
                        mail.send_email()

                    # close communication with the PostgreSQL database server
                        cur.close()
                    # commit the changes
                        conn.commit()

                        dlg = QtWidgets.QMessageBox()
                        new_icon = QtGui.QIcon()
                        new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                        dlg.setWindowIcon(new_icon)
                        dlg.setWindowTitle("Activar Pedido")
                        dlg.setText("Pedido activado con éxito")
                        dlg.setIcon(QtWidgets.QMessageBox.Icon.Information)
                        dlg.exec()

                    except (Exception, psycopg2.DatabaseError) as error:
                        dlg = QtWidgets.QMessageBox()
                        new_icon = QtGui.QIcon()
                        new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                        dlg.setWindowIcon(new_icon)
                        dlg.setWindowTitle("ERP EIPSA")
                        dlg.setText("Ha ocurrido el siguiente error:\n"
                                    + str(error))
                        dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                        dlg.exec()
                        del dlg, new_icon
                    finally:
                        if conn is not None:
                            conn.close()

            except (Exception, psycopg2.DatabaseError) as error:
                dlg = QtWidgets.QMessageBox()
                new_icon = QtGui.QIcon()
                new_icon.addPixmap(QtGui.QPixmap(os.path.abspath(os.path.join(basedir, "Resources/Iconos/icon.ico"))), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
                dlg.setWindowIcon(new_icon)
                dlg.setWindowTitle("ERP EIPSA")
                dlg.setText("Ha ocurrido el siguiente error:\n"
                            + str(error))
                dlg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
                dlg.exec()
                del dlg, new_icon
            finally:
                if conn is not None:
                    conn.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    OrderActivation_Window = QtWidgets.QMainWindow()
    ui = Ui_OrderActivation_Window()
    ui.setupUi(OrderActivation_Window)
    OrderActivation_Window.show()
    sys.exit(app.exec())
